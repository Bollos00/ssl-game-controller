// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssl_gc_change.proto

package statemachine

import (
	fmt "fmt"
	geom "github.com/RoboCup-SSL/ssl-game-controller/internal/app/geom"
	state "github.com/RoboCup-SSL/ssl-game-controller/internal/app/state"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A state change
type StateChange struct {
	// A unique increasing id
	Id *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The previous state
	StatePre *state.State `protobuf:"bytes,2,opt,name=state_pre,json=statePre" json:"state_pre,omitempty"`
	// The state after the change was applied
	State *state.State `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	// The change itself
	Change *Change `protobuf:"bytes,4,opt,name=change" json:"change,omitempty"`
	// The timestamp when the change was triggered
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StateChange) Reset()         { *m = StateChange{} }
func (m *StateChange) String() string { return proto.CompactTextString(m) }
func (*StateChange) ProtoMessage()    {}
func (*StateChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{0}
}

func (m *StateChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateChange.Unmarshal(m, b)
}
func (m *StateChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateChange.Marshal(b, m, deterministic)
}
func (m *StateChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateChange.Merge(m, src)
}
func (m *StateChange) XXX_Size() int {
	return xxx_messageInfo_StateChange.Size(m)
}
func (m *StateChange) XXX_DiscardUnknown() {
	xxx_messageInfo_StateChange.DiscardUnknown(m)
}

var xxx_messageInfo_StateChange proto.InternalMessageInfo

func (m *StateChange) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *StateChange) GetStatePre() *state.State {
	if m != nil {
		return m.StatePre
	}
	return nil
}

func (m *StateChange) GetState() *state.State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *StateChange) GetChange() *Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (m *StateChange) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

// A certain change
type Change struct {
	// An identifier of the origin that triggered the change
	Origin *string `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	// Is this change revertible?
	Revertible *bool `protobuf:"varint,16,opt,name=revertible" json:"revertible,omitempty"`
	// Types that are valid to be assigned to Change:
	//	*Change_NewCommand
	//	*Change_ChangeStage
	//	*Change_SetBallPlacementPos
	//	*Change_AddYellowCard
	//	*Change_AddRedCard
	//	*Change_YellowCardOver
	//	*Change_AddGameEvent
	//	*Change_AddPassiveGameEvent
	//	*Change_AddProposal
	//	*Change_StartBallPlacement
	//	*Change_Continue
	//	*Change_UpdateConfig
	//	*Change_UpdateTeamState
	//	*Change_SwitchColors
	//	*Change_Revert
	//	*Change_NewGameState
	//	*Change_AcceptProposalGroup
	Change               isChange_Change `protobuf_oneof:"change"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Change) Reset()         { *m = Change{} }
func (m *Change) String() string { return proto.CompactTextString(m) }
func (*Change) ProtoMessage()    {}
func (*Change) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{1}
}

func (m *Change) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Change.Unmarshal(m, b)
}
func (m *Change) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Change.Marshal(b, m, deterministic)
}
func (m *Change) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Change.Merge(m, src)
}
func (m *Change) XXX_Size() int {
	return xxx_messageInfo_Change.Size(m)
}
func (m *Change) XXX_DiscardUnknown() {
	xxx_messageInfo_Change.DiscardUnknown(m)
}

var xxx_messageInfo_Change proto.InternalMessageInfo

func (m *Change) GetOrigin() string {
	if m != nil && m.Origin != nil {
		return *m.Origin
	}
	return ""
}

func (m *Change) GetRevertible() bool {
	if m != nil && m.Revertible != nil {
		return *m.Revertible
	}
	return false
}

type isChange_Change interface {
	isChange_Change()
}

type Change_NewCommand struct {
	NewCommand *NewCommand `protobuf:"bytes,2,opt,name=new_command,json=newCommand,oneof"`
}

type Change_ChangeStage struct {
	ChangeStage *ChangeStage `protobuf:"bytes,3,opt,name=change_stage,json=changeStage,oneof"`
}

type Change_SetBallPlacementPos struct {
	SetBallPlacementPos *SetBallPlacementPos `protobuf:"bytes,4,opt,name=set_ball_placement_pos,json=setBallPlacementPos,oneof"`
}

type Change_AddYellowCard struct {
	AddYellowCard *AddYellowCard `protobuf:"bytes,5,opt,name=add_yellow_card,json=addYellowCard,oneof"`
}

type Change_AddRedCard struct {
	AddRedCard *AddRedCard `protobuf:"bytes,6,opt,name=add_red_card,json=addRedCard,oneof"`
}

type Change_YellowCardOver struct {
	YellowCardOver *YellowCardOver `protobuf:"bytes,7,opt,name=yellow_card_over,json=yellowCardOver,oneof"`
}

type Change_AddGameEvent struct {
	AddGameEvent *AddGameEvent `protobuf:"bytes,8,opt,name=add_game_event,json=addGameEvent,oneof"`
}

type Change_AddPassiveGameEvent struct {
	AddPassiveGameEvent *AddPassiveGameEvent `protobuf:"bytes,19,opt,name=add_passive_game_event,json=addPassiveGameEvent,oneof"`
}

type Change_AddProposal struct {
	AddProposal *AddProposal `protobuf:"bytes,9,opt,name=add_proposal,json=addProposal,oneof"`
}

type Change_StartBallPlacement struct {
	StartBallPlacement *StartBallPlacement `protobuf:"bytes,10,opt,name=start_ball_placement,json=startBallPlacement,oneof"`
}

type Change_Continue struct {
	Continue *Continue `protobuf:"bytes,11,opt,name=continue,oneof"`
}

type Change_UpdateConfig struct {
	UpdateConfig *UpdateConfig `protobuf:"bytes,12,opt,name=update_config,json=updateConfig,oneof"`
}

type Change_UpdateTeamState struct {
	UpdateTeamState *UpdateTeamState `protobuf:"bytes,13,opt,name=update_team_state,json=updateTeamState,oneof"`
}

type Change_SwitchColors struct {
	SwitchColors *SwitchColors `protobuf:"bytes,14,opt,name=switch_colors,json=switchColors,oneof"`
}

type Change_Revert struct {
	Revert *Revert `protobuf:"bytes,15,opt,name=revert,oneof"`
}

type Change_NewGameState struct {
	NewGameState *NewGameState `protobuf:"bytes,17,opt,name=new_game_state,json=newGameState,oneof"`
}

type Change_AcceptProposalGroup struct {
	AcceptProposalGroup *AcceptProposalGroup `protobuf:"bytes,18,opt,name=accept_proposal_group,json=acceptProposalGroup,oneof"`
}

func (*Change_NewCommand) isChange_Change() {}

func (*Change_ChangeStage) isChange_Change() {}

func (*Change_SetBallPlacementPos) isChange_Change() {}

func (*Change_AddYellowCard) isChange_Change() {}

func (*Change_AddRedCard) isChange_Change() {}

func (*Change_YellowCardOver) isChange_Change() {}

func (*Change_AddGameEvent) isChange_Change() {}

func (*Change_AddPassiveGameEvent) isChange_Change() {}

func (*Change_AddProposal) isChange_Change() {}

func (*Change_StartBallPlacement) isChange_Change() {}

func (*Change_Continue) isChange_Change() {}

func (*Change_UpdateConfig) isChange_Change() {}

func (*Change_UpdateTeamState) isChange_Change() {}

func (*Change_SwitchColors) isChange_Change() {}

func (*Change_Revert) isChange_Change() {}

func (*Change_NewGameState) isChange_Change() {}

func (*Change_AcceptProposalGroup) isChange_Change() {}

func (m *Change) GetChange() isChange_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (m *Change) GetNewCommand() *NewCommand {
	if x, ok := m.GetChange().(*Change_NewCommand); ok {
		return x.NewCommand
	}
	return nil
}

func (m *Change) GetChangeStage() *ChangeStage {
	if x, ok := m.GetChange().(*Change_ChangeStage); ok {
		return x.ChangeStage
	}
	return nil
}

func (m *Change) GetSetBallPlacementPos() *SetBallPlacementPos {
	if x, ok := m.GetChange().(*Change_SetBallPlacementPos); ok {
		return x.SetBallPlacementPos
	}
	return nil
}

func (m *Change) GetAddYellowCard() *AddYellowCard {
	if x, ok := m.GetChange().(*Change_AddYellowCard); ok {
		return x.AddYellowCard
	}
	return nil
}

func (m *Change) GetAddRedCard() *AddRedCard {
	if x, ok := m.GetChange().(*Change_AddRedCard); ok {
		return x.AddRedCard
	}
	return nil
}

func (m *Change) GetYellowCardOver() *YellowCardOver {
	if x, ok := m.GetChange().(*Change_YellowCardOver); ok {
		return x.YellowCardOver
	}
	return nil
}

func (m *Change) GetAddGameEvent() *AddGameEvent {
	if x, ok := m.GetChange().(*Change_AddGameEvent); ok {
		return x.AddGameEvent
	}
	return nil
}

func (m *Change) GetAddPassiveGameEvent() *AddPassiveGameEvent {
	if x, ok := m.GetChange().(*Change_AddPassiveGameEvent); ok {
		return x.AddPassiveGameEvent
	}
	return nil
}

func (m *Change) GetAddProposal() *AddProposal {
	if x, ok := m.GetChange().(*Change_AddProposal); ok {
		return x.AddProposal
	}
	return nil
}

func (m *Change) GetStartBallPlacement() *StartBallPlacement {
	if x, ok := m.GetChange().(*Change_StartBallPlacement); ok {
		return x.StartBallPlacement
	}
	return nil
}

func (m *Change) GetContinue() *Continue {
	if x, ok := m.GetChange().(*Change_Continue); ok {
		return x.Continue
	}
	return nil
}

func (m *Change) GetUpdateConfig() *UpdateConfig {
	if x, ok := m.GetChange().(*Change_UpdateConfig); ok {
		return x.UpdateConfig
	}
	return nil
}

func (m *Change) GetUpdateTeamState() *UpdateTeamState {
	if x, ok := m.GetChange().(*Change_UpdateTeamState); ok {
		return x.UpdateTeamState
	}
	return nil
}

func (m *Change) GetSwitchColors() *SwitchColors {
	if x, ok := m.GetChange().(*Change_SwitchColors); ok {
		return x.SwitchColors
	}
	return nil
}

func (m *Change) GetRevert() *Revert {
	if x, ok := m.GetChange().(*Change_Revert); ok {
		return x.Revert
	}
	return nil
}

func (m *Change) GetNewGameState() *NewGameState {
	if x, ok := m.GetChange().(*Change_NewGameState); ok {
		return x.NewGameState
	}
	return nil
}

func (m *Change) GetAcceptProposalGroup() *AcceptProposalGroup {
	if x, ok := m.GetChange().(*Change_AcceptProposalGroup); ok {
		return x.AcceptProposalGroup
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Change) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Change_NewCommand)(nil),
		(*Change_ChangeStage)(nil),
		(*Change_SetBallPlacementPos)(nil),
		(*Change_AddYellowCard)(nil),
		(*Change_AddRedCard)(nil),
		(*Change_YellowCardOver)(nil),
		(*Change_AddGameEvent)(nil),
		(*Change_AddPassiveGameEvent)(nil),
		(*Change_AddProposal)(nil),
		(*Change_StartBallPlacement)(nil),
		(*Change_Continue)(nil),
		(*Change_UpdateConfig)(nil),
		(*Change_UpdateTeamState)(nil),
		(*Change_SwitchColors)(nil),
		(*Change_Revert)(nil),
		(*Change_NewGameState)(nil),
		(*Change_AcceptProposalGroup)(nil),
	}
}

// New referee command
type NewCommand struct {
	// The command
	Command              *state.Command `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NewCommand) Reset()         { *m = NewCommand{} }
func (m *NewCommand) String() string { return proto.CompactTextString(m) }
func (*NewCommand) ProtoMessage()    {}
func (*NewCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{2}
}

func (m *NewCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewCommand.Unmarshal(m, b)
}
func (m *NewCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewCommand.Marshal(b, m, deterministic)
}
func (m *NewCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewCommand.Merge(m, src)
}
func (m *NewCommand) XXX_Size() int {
	return xxx_messageInfo_NewCommand.Size(m)
}
func (m *NewCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_NewCommand.DiscardUnknown(m)
}

var xxx_messageInfo_NewCommand proto.InternalMessageInfo

func (m *NewCommand) GetCommand() *state.Command {
	if m != nil {
		return m.Command
	}
	return nil
}

// Switch to a new stage
type ChangeStage struct {
	// The new stage
	NewStage             *state.Referee_Stage `protobuf:"varint,1,opt,name=new_stage,json=newStage,enum=Referee_Stage" json:"new_stage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ChangeStage) Reset()         { *m = ChangeStage{} }
func (m *ChangeStage) String() string { return proto.CompactTextString(m) }
func (*ChangeStage) ProtoMessage()    {}
func (*ChangeStage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{3}
}

func (m *ChangeStage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeStage.Unmarshal(m, b)
}
func (m *ChangeStage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeStage.Marshal(b, m, deterministic)
}
func (m *ChangeStage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeStage.Merge(m, src)
}
func (m *ChangeStage) XXX_Size() int {
	return xxx_messageInfo_ChangeStage.Size(m)
}
func (m *ChangeStage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeStage.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeStage proto.InternalMessageInfo

func (m *ChangeStage) GetNewStage() state.Referee_Stage {
	if m != nil && m.NewStage != nil {
		return *m.NewStage
	}
	return state.Referee_NORMAL_FIRST_HALF_PRE
}

// Set the ball placement pos
type SetBallPlacementPos struct {
	// The position in [m]
	Pos                  *geom.Vector2 `protobuf:"bytes,1,opt,name=pos" json:"pos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetBallPlacementPos) Reset()         { *m = SetBallPlacementPos{} }
func (m *SetBallPlacementPos) String() string { return proto.CompactTextString(m) }
func (*SetBallPlacementPos) ProtoMessage()    {}
func (*SetBallPlacementPos) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{4}
}

func (m *SetBallPlacementPos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetBallPlacementPos.Unmarshal(m, b)
}
func (m *SetBallPlacementPos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetBallPlacementPos.Marshal(b, m, deterministic)
}
func (m *SetBallPlacementPos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetBallPlacementPos.Merge(m, src)
}
func (m *SetBallPlacementPos) XXX_Size() int {
	return xxx_messageInfo_SetBallPlacementPos.Size(m)
}
func (m *SetBallPlacementPos) XXX_DiscardUnknown() {
	xxx_messageInfo_SetBallPlacementPos.DiscardUnknown(m)
}

var xxx_messageInfo_SetBallPlacementPos proto.InternalMessageInfo

func (m *SetBallPlacementPos) GetPos() *geom.Vector2 {
	if m != nil {
		return m.Pos
	}
	return nil
}

// Add a new yellow card
type AddYellowCard struct {
	// The team that the card is for
	ForTeam *state.Team `protobuf:"varint,1,opt,name=for_team,json=forTeam,enum=Team" json:"for_team,omitempty"`
	// The game event that caused the card
	CausedByGameEvent    *state.GameEvent `protobuf:"bytes,2,opt,name=caused_by_game_event,json=causedByGameEvent" json:"caused_by_game_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AddYellowCard) Reset()         { *m = AddYellowCard{} }
func (m *AddYellowCard) String() string { return proto.CompactTextString(m) }
func (*AddYellowCard) ProtoMessage()    {}
func (*AddYellowCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{5}
}

func (m *AddYellowCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddYellowCard.Unmarshal(m, b)
}
func (m *AddYellowCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddYellowCard.Marshal(b, m, deterministic)
}
func (m *AddYellowCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddYellowCard.Merge(m, src)
}
func (m *AddYellowCard) XXX_Size() int {
	return xxx_messageInfo_AddYellowCard.Size(m)
}
func (m *AddYellowCard) XXX_DiscardUnknown() {
	xxx_messageInfo_AddYellowCard.DiscardUnknown(m)
}

var xxx_messageInfo_AddYellowCard proto.InternalMessageInfo

func (m *AddYellowCard) GetForTeam() state.Team {
	if m != nil && m.ForTeam != nil {
		return *m.ForTeam
	}
	return state.Team_UNKNOWN
}

func (m *AddYellowCard) GetCausedByGameEvent() *state.GameEvent {
	if m != nil {
		return m.CausedByGameEvent
	}
	return nil
}

// Add a new red card
type AddRedCard struct {
	// The team that the card is for
	ForTeam *state.Team `protobuf:"varint,1,opt,name=for_team,json=forTeam,enum=Team" json:"for_team,omitempty"`
	// The game event that caused the card
	CausedByGameEvent    *state.GameEvent `protobuf:"bytes,2,opt,name=caused_by_game_event,json=causedByGameEvent" json:"caused_by_game_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AddRedCard) Reset()         { *m = AddRedCard{} }
func (m *AddRedCard) String() string { return proto.CompactTextString(m) }
func (*AddRedCard) ProtoMessage()    {}
func (*AddRedCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{6}
}

func (m *AddRedCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRedCard.Unmarshal(m, b)
}
func (m *AddRedCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRedCard.Marshal(b, m, deterministic)
}
func (m *AddRedCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRedCard.Merge(m, src)
}
func (m *AddRedCard) XXX_Size() int {
	return xxx_messageInfo_AddRedCard.Size(m)
}
func (m *AddRedCard) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRedCard.DiscardUnknown(m)
}

var xxx_messageInfo_AddRedCard proto.InternalMessageInfo

func (m *AddRedCard) GetForTeam() state.Team {
	if m != nil && m.ForTeam != nil {
		return *m.ForTeam
	}
	return state.Team_UNKNOWN
}

func (m *AddRedCard) GetCausedByGameEvent() *state.GameEvent {
	if m != nil {
		return m.CausedByGameEvent
	}
	return nil
}

// Trigger when a yellow card timed out
type YellowCardOver struct {
	// The team that the card was for
	ForTeam              *state.Team `protobuf:"varint,1,opt,name=for_team,json=forTeam,enum=Team" json:"for_team,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *YellowCardOver) Reset()         { *m = YellowCardOver{} }
func (m *YellowCardOver) String() string { return proto.CompactTextString(m) }
func (*YellowCardOver) ProtoMessage()    {}
func (*YellowCardOver) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{7}
}

func (m *YellowCardOver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YellowCardOver.Unmarshal(m, b)
}
func (m *YellowCardOver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YellowCardOver.Marshal(b, m, deterministic)
}
func (m *YellowCardOver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YellowCardOver.Merge(m, src)
}
func (m *YellowCardOver) XXX_Size() int {
	return xxx_messageInfo_YellowCardOver.Size(m)
}
func (m *YellowCardOver) XXX_DiscardUnknown() {
	xxx_messageInfo_YellowCardOver.DiscardUnknown(m)
}

var xxx_messageInfo_YellowCardOver proto.InternalMessageInfo

func (m *YellowCardOver) GetForTeam() state.Team {
	if m != nil && m.ForTeam != nil {
		return *m.ForTeam
	}
	return state.Team_UNKNOWN
}

// Add a new game event
type AddGameEvent struct {
	// The game event
	GameEvent            *state.GameEvent `protobuf:"bytes,1,opt,name=game_event,json=gameEvent" json:"game_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AddGameEvent) Reset()         { *m = AddGameEvent{} }
func (m *AddGameEvent) String() string { return proto.CompactTextString(m) }
func (*AddGameEvent) ProtoMessage()    {}
func (*AddGameEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{8}
}

func (m *AddGameEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddGameEvent.Unmarshal(m, b)
}
func (m *AddGameEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddGameEvent.Marshal(b, m, deterministic)
}
func (m *AddGameEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddGameEvent.Merge(m, src)
}
func (m *AddGameEvent) XXX_Size() int {
	return xxx_messageInfo_AddGameEvent.Size(m)
}
func (m *AddGameEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AddGameEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AddGameEvent proto.InternalMessageInfo

func (m *AddGameEvent) GetGameEvent() *state.GameEvent {
	if m != nil {
		return m.GameEvent
	}
	return nil
}

// Add a new passive game event (that is only logged, but does not automatically trigger anything)
type AddPassiveGameEvent struct {
	// The game event
	GameEvent            *state.GameEvent `protobuf:"bytes,1,opt,name=game_event,json=gameEvent" json:"game_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AddPassiveGameEvent) Reset()         { *m = AddPassiveGameEvent{} }
func (m *AddPassiveGameEvent) String() string { return proto.CompactTextString(m) }
func (*AddPassiveGameEvent) ProtoMessage()    {}
func (*AddPassiveGameEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{9}
}

func (m *AddPassiveGameEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPassiveGameEvent.Unmarshal(m, b)
}
func (m *AddPassiveGameEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPassiveGameEvent.Marshal(b, m, deterministic)
}
func (m *AddPassiveGameEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPassiveGameEvent.Merge(m, src)
}
func (m *AddPassiveGameEvent) XXX_Size() int {
	return xxx_messageInfo_AddPassiveGameEvent.Size(m)
}
func (m *AddPassiveGameEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPassiveGameEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AddPassiveGameEvent proto.InternalMessageInfo

func (m *AddPassiveGameEvent) GetGameEvent() *state.GameEvent {
	if m != nil {
		return m.GameEvent
	}
	return nil
}

// Add a new proposal (i.e. from an auto referee for majority voting)
type AddProposal struct {
	// The proposal
	Proposal             *state.Proposal `protobuf:"bytes,1,opt,name=proposal" json:"proposal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddProposal) Reset()         { *m = AddProposal{} }
func (m *AddProposal) String() string { return proto.CompactTextString(m) }
func (*AddProposal) ProtoMessage()    {}
func (*AddProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{10}
}

func (m *AddProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProposal.Unmarshal(m, b)
}
func (m *AddProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProposal.Marshal(b, m, deterministic)
}
func (m *AddProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProposal.Merge(m, src)
}
func (m *AddProposal) XXX_Size() int {
	return xxx_messageInfo_AddProposal.Size(m)
}
func (m *AddProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProposal.DiscardUnknown(m)
}

var xxx_messageInfo_AddProposal proto.InternalMessageInfo

func (m *AddProposal) GetProposal() *state.Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

// Accept a proposal group (that contain one or more proposals of the same type)
type AcceptProposalGroup struct {
	// The id of the group
	GroupId *uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	// An identifier of the acceptor
	AcceptedBy           *string  `protobuf:"bytes,2,opt,name=accepted_by,json=acceptedBy" json:"accepted_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcceptProposalGroup) Reset()         { *m = AcceptProposalGroup{} }
func (m *AcceptProposalGroup) String() string { return proto.CompactTextString(m) }
func (*AcceptProposalGroup) ProtoMessage()    {}
func (*AcceptProposalGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{11}
}

func (m *AcceptProposalGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptProposalGroup.Unmarshal(m, b)
}
func (m *AcceptProposalGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptProposalGroup.Marshal(b, m, deterministic)
}
func (m *AcceptProposalGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptProposalGroup.Merge(m, src)
}
func (m *AcceptProposalGroup) XXX_Size() int {
	return xxx_messageInfo_AcceptProposalGroup.Size(m)
}
func (m *AcceptProposalGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptProposalGroup.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptProposalGroup proto.InternalMessageInfo

func (m *AcceptProposalGroup) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *AcceptProposalGroup) GetAcceptedBy() string {
	if m != nil && m.AcceptedBy != nil {
		return *m.AcceptedBy
	}
	return ""
}

// Initiate ball placement
type StartBallPlacement struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartBallPlacement) Reset()         { *m = StartBallPlacement{} }
func (m *StartBallPlacement) String() string { return proto.CompactTextString(m) }
func (*StartBallPlacement) ProtoMessage()    {}
func (*StartBallPlacement) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{12}
}

func (m *StartBallPlacement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartBallPlacement.Unmarshal(m, b)
}
func (m *StartBallPlacement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartBallPlacement.Marshal(b, m, deterministic)
}
func (m *StartBallPlacement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartBallPlacement.Merge(m, src)
}
func (m *StartBallPlacement) XXX_Size() int {
	return xxx_messageInfo_StartBallPlacement.Size(m)
}
func (m *StartBallPlacement) XXX_DiscardUnknown() {
	xxx_messageInfo_StartBallPlacement.DiscardUnknown(m)
}

var xxx_messageInfo_StartBallPlacement proto.InternalMessageInfo

// Continue with the next referee command
type Continue struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Continue) Reset()         { *m = Continue{} }
func (m *Continue) String() string { return proto.CompactTextString(m) }
func (*Continue) ProtoMessage()    {}
func (*Continue) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{13}
}

func (m *Continue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Continue.Unmarshal(m, b)
}
func (m *Continue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Continue.Marshal(b, m, deterministic)
}
func (m *Continue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Continue.Merge(m, src)
}
func (m *Continue) XXX_Size() int {
	return xxx_messageInfo_Continue.Size(m)
}
func (m *Continue) XXX_DiscardUnknown() {
	xxx_messageInfo_Continue.DiscardUnknown(m)
}

var xxx_messageInfo_Continue proto.InternalMessageInfo

// Update some configuration
type UpdateConfig struct {
	// The division to play with
	Division *state.Division `protobuf:"varint,1,opt,name=division,enum=Division" json:"division,omitempty"`
	// the team that does/did the first kick off
	FirstKickoffTeam *state.Team `protobuf:"varint,2,opt,name=first_kickoff_team,json=firstKickoffTeam,enum=Team" json:"first_kickoff_team,omitempty"`
	// Enable automatic continuation when all conditions are met
	AutoContinue         *bool    `protobuf:"varint,3,opt,name=auto_continue,json=autoContinue" json:"auto_continue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateConfig) Reset()         { *m = UpdateConfig{} }
func (m *UpdateConfig) String() string { return proto.CompactTextString(m) }
func (*UpdateConfig) ProtoMessage()    {}
func (*UpdateConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{14}
}

func (m *UpdateConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateConfig.Unmarshal(m, b)
}
func (m *UpdateConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateConfig.Marshal(b, m, deterministic)
}
func (m *UpdateConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateConfig.Merge(m, src)
}
func (m *UpdateConfig) XXX_Size() int {
	return xxx_messageInfo_UpdateConfig.Size(m)
}
func (m *UpdateConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateConfig.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateConfig proto.InternalMessageInfo

func (m *UpdateConfig) GetDivision() state.Division {
	if m != nil && m.Division != nil {
		return *m.Division
	}
	return state.Division_DIV_UNKNOWN
}

func (m *UpdateConfig) GetFirstKickoffTeam() state.Team {
	if m != nil && m.FirstKickoffTeam != nil {
		return *m.FirstKickoffTeam
	}
	return state.Team_UNKNOWN
}

func (m *UpdateConfig) GetAutoContinue() bool {
	if m != nil && m.AutoContinue != nil {
		return *m.AutoContinue
	}
	return false
}

// Update the current state of a team (all fields that should be updated are set)
type UpdateTeamState struct {
	// The team
	ForTeam *state.Team `protobuf:"varint,1,opt,name=for_team,json=forTeam,enum=Team" json:"for_team,omitempty"`
	// Change the name of the team
	TeamName *string `protobuf:"bytes,2,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	// Change the number of goals that the teams has at the moment
	Goals *int32 `protobuf:"varint,3,opt,name=goals" json:"goals,omitempty"`
	// The id of the goal keeper
	Goalkeeper *int32 `protobuf:"varint,4,opt,name=goalkeeper" json:"goalkeeper,omitempty"`
	// The number of timeouts that the team has left
	TimeoutsLeft *int32 `protobuf:"varint,5,opt,name=timeouts_left,json=timeoutsLeft" json:"timeouts_left,omitempty"`
	// The timeout time that the team has left
	TimeoutTimeLeft *string `protobuf:"bytes,6,opt,name=timeout_time_left,json=timeoutTimeLeft" json:"timeout_time_left,omitempty"`
	// Does the team play on the positive or the negative half (in ssl-vision coordinates)?
	OnPositiveHalf *bool `protobuf:"varint,7,opt,name=on_positive_half,json=onPositiveHalf" json:"on_positive_half,omitempty"`
	// The number of ball placement failures
	BallPlacementFailures *int32 `protobuf:"varint,8,opt,name=ball_placement_failures,json=ballPlacementFailures" json:"ball_placement_failures,omitempty"`
	// Can the team place the ball, or is ball placement for this team disabled and should be skipped?
	CanPlaceBall *bool `protobuf:"varint,9,opt,name=can_place_ball,json=canPlaceBall" json:"can_place_ball,omitempty"`
	// The number of challenge flags that the team has left
	ChallengeFlagsLeft *int32 `protobuf:"varint,21,opt,name=challenge_flags_left,json=challengeFlagsLeft" json:"challenge_flags_left,omitempty"`
	// Does the team want to substitute a robot in the next possible situation?
	RequestsBotSubstitution *bool `protobuf:"varint,10,opt,name=requests_bot_substitution,json=requestsBotSubstitution" json:"requests_bot_substitution,omitempty"`
	// Does the team want to take a timeout in the next possible situation?
	RequestsTimeout *bool `protobuf:"varint,17,opt,name=requests_timeout,json=requestsTimeout" json:"requests_timeout,omitempty"`
	// Does the team want to challenge a recent decision of the referee?
	RequestsChallenge *bool `protobuf:"varint,18,opt,name=requests_challenge,json=requestsChallenge" json:"requests_challenge,omitempty"`
	// Does the team want to request an emergency stop?
	RequestsEmergencyStop *bool `protobuf:"varint,19,opt,name=requests_emergency_stop,json=requestsEmergencyStop" json:"requests_emergency_stop,omitempty"`
	// Update a certain yellow card of the team
	YellowCard *state.YellowCard `protobuf:"bytes,20,opt,name=yellow_card,json=yellowCard" json:"yellow_card,omitempty"`
	// Update a certain red card of the team
	RedCard *state.RedCard `protobuf:"bytes,12,opt,name=red_card,json=redCard" json:"red_card,omitempty"`
	// Update a certain foul of the team
	Foul *state.Foul `protobuf:"bytes,13,opt,name=foul" json:"foul,omitempty"`
	// Remove the yellow card with this id
	RemoveYellowCard *uint32 `protobuf:"varint,14,opt,name=remove_yellow_card,json=removeYellowCard" json:"remove_yellow_card,omitempty"`
	// Remove the red card with this id
	RemoveRedCard *uint32 `protobuf:"varint,15,opt,name=remove_red_card,json=removeRedCard" json:"remove_red_card,omitempty"`
	// Remove the foul with this id
	RemoveFoul           *uint32  `protobuf:"varint,16,opt,name=remove_foul,json=removeFoul" json:"remove_foul,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTeamState) Reset()         { *m = UpdateTeamState{} }
func (m *UpdateTeamState) String() string { return proto.CompactTextString(m) }
func (*UpdateTeamState) ProtoMessage()    {}
func (*UpdateTeamState) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{15}
}

func (m *UpdateTeamState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTeamState.Unmarshal(m, b)
}
func (m *UpdateTeamState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTeamState.Marshal(b, m, deterministic)
}
func (m *UpdateTeamState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTeamState.Merge(m, src)
}
func (m *UpdateTeamState) XXX_Size() int {
	return xxx_messageInfo_UpdateTeamState.Size(m)
}
func (m *UpdateTeamState) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTeamState.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTeamState proto.InternalMessageInfo

func (m *UpdateTeamState) GetForTeam() state.Team {
	if m != nil && m.ForTeam != nil {
		return *m.ForTeam
	}
	return state.Team_UNKNOWN
}

func (m *UpdateTeamState) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *UpdateTeamState) GetGoals() int32 {
	if m != nil && m.Goals != nil {
		return *m.Goals
	}
	return 0
}

func (m *UpdateTeamState) GetGoalkeeper() int32 {
	if m != nil && m.Goalkeeper != nil {
		return *m.Goalkeeper
	}
	return 0
}

func (m *UpdateTeamState) GetTimeoutsLeft() int32 {
	if m != nil && m.TimeoutsLeft != nil {
		return *m.TimeoutsLeft
	}
	return 0
}

func (m *UpdateTeamState) GetTimeoutTimeLeft() string {
	if m != nil && m.TimeoutTimeLeft != nil {
		return *m.TimeoutTimeLeft
	}
	return ""
}

func (m *UpdateTeamState) GetOnPositiveHalf() bool {
	if m != nil && m.OnPositiveHalf != nil {
		return *m.OnPositiveHalf
	}
	return false
}

func (m *UpdateTeamState) GetBallPlacementFailures() int32 {
	if m != nil && m.BallPlacementFailures != nil {
		return *m.BallPlacementFailures
	}
	return 0
}

func (m *UpdateTeamState) GetCanPlaceBall() bool {
	if m != nil && m.CanPlaceBall != nil {
		return *m.CanPlaceBall
	}
	return false
}

func (m *UpdateTeamState) GetChallengeFlagsLeft() int32 {
	if m != nil && m.ChallengeFlagsLeft != nil {
		return *m.ChallengeFlagsLeft
	}
	return 0
}

func (m *UpdateTeamState) GetRequestsBotSubstitution() bool {
	if m != nil && m.RequestsBotSubstitution != nil {
		return *m.RequestsBotSubstitution
	}
	return false
}

func (m *UpdateTeamState) GetRequestsTimeout() bool {
	if m != nil && m.RequestsTimeout != nil {
		return *m.RequestsTimeout
	}
	return false
}

func (m *UpdateTeamState) GetRequestsChallenge() bool {
	if m != nil && m.RequestsChallenge != nil {
		return *m.RequestsChallenge
	}
	return false
}

func (m *UpdateTeamState) GetRequestsEmergencyStop() bool {
	if m != nil && m.RequestsEmergencyStop != nil {
		return *m.RequestsEmergencyStop
	}
	return false
}

func (m *UpdateTeamState) GetYellowCard() *state.YellowCard {
	if m != nil {
		return m.YellowCard
	}
	return nil
}

func (m *UpdateTeamState) GetRedCard() *state.RedCard {
	if m != nil {
		return m.RedCard
	}
	return nil
}

func (m *UpdateTeamState) GetFoul() *state.Foul {
	if m != nil {
		return m.Foul
	}
	return nil
}

func (m *UpdateTeamState) GetRemoveYellowCard() uint32 {
	if m != nil && m.RemoveYellowCard != nil {
		return *m.RemoveYellowCard
	}
	return 0
}

func (m *UpdateTeamState) GetRemoveRedCard() uint32 {
	if m != nil && m.RemoveRedCard != nil {
		return *m.RemoveRedCard
	}
	return 0
}

func (m *UpdateTeamState) GetRemoveFoul() uint32 {
	if m != nil && m.RemoveFoul != nil {
		return *m.RemoveFoul
	}
	return 0
}

// Switch the team colors
type SwitchColors struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SwitchColors) Reset()         { *m = SwitchColors{} }
func (m *SwitchColors) String() string { return proto.CompactTextString(m) }
func (*SwitchColors) ProtoMessage()    {}
func (*SwitchColors) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{16}
}

func (m *SwitchColors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchColors.Unmarshal(m, b)
}
func (m *SwitchColors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchColors.Marshal(b, m, deterministic)
}
func (m *SwitchColors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchColors.Merge(m, src)
}
func (m *SwitchColors) XXX_Size() int {
	return xxx_messageInfo_SwitchColors.Size(m)
}
func (m *SwitchColors) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchColors.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchColors proto.InternalMessageInfo

// Revert a certain change
type Revert struct {
	// The id of the change
	ChangeId             *int32   `protobuf:"varint,1,opt,name=change_id,json=changeId" json:"change_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Revert) Reset()         { *m = Revert{} }
func (m *Revert) String() string { return proto.CompactTextString(m) }
func (*Revert) ProtoMessage()    {}
func (*Revert) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{17}
}

func (m *Revert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Revert.Unmarshal(m, b)
}
func (m *Revert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Revert.Marshal(b, m, deterministic)
}
func (m *Revert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Revert.Merge(m, src)
}
func (m *Revert) XXX_Size() int {
	return xxx_messageInfo_Revert.Size(m)
}
func (m *Revert) XXX_DiscardUnknown() {
	xxx_messageInfo_Revert.DiscardUnknown(m)
}

var xxx_messageInfo_Revert proto.InternalMessageInfo

func (m *Revert) GetChangeId() int32 {
	if m != nil && m.ChangeId != nil {
		return *m.ChangeId
	}
	return 0
}

// Change the current game state
type NewGameState struct {
	// The new game state
	GameState            *state.GameState `protobuf:"bytes,1,opt,name=game_state,json=gameState" json:"game_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NewGameState) Reset()         { *m = NewGameState{} }
func (m *NewGameState) String() string { return proto.CompactTextString(m) }
func (*NewGameState) ProtoMessage()    {}
func (*NewGameState) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0de3f29222370fd, []int{18}
}

func (m *NewGameState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewGameState.Unmarshal(m, b)
}
func (m *NewGameState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewGameState.Marshal(b, m, deterministic)
}
func (m *NewGameState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewGameState.Merge(m, src)
}
func (m *NewGameState) XXX_Size() int {
	return xxx_messageInfo_NewGameState.Size(m)
}
func (m *NewGameState) XXX_DiscardUnknown() {
	xxx_messageInfo_NewGameState.DiscardUnknown(m)
}

var xxx_messageInfo_NewGameState proto.InternalMessageInfo

func (m *NewGameState) GetGameState() *state.GameState {
	if m != nil {
		return m.GameState
	}
	return nil
}

func init() {
	proto.RegisterType((*StateChange)(nil), "StateChange")
	proto.RegisterType((*Change)(nil), "Change")
	proto.RegisterType((*NewCommand)(nil), "NewCommand")
	proto.RegisterType((*ChangeStage)(nil), "ChangeStage")
	proto.RegisterType((*SetBallPlacementPos)(nil), "SetBallPlacementPos")
	proto.RegisterType((*AddYellowCard)(nil), "AddYellowCard")
	proto.RegisterType((*AddRedCard)(nil), "AddRedCard")
	proto.RegisterType((*YellowCardOver)(nil), "YellowCardOver")
	proto.RegisterType((*AddGameEvent)(nil), "AddGameEvent")
	proto.RegisterType((*AddPassiveGameEvent)(nil), "AddPassiveGameEvent")
	proto.RegisterType((*AddProposal)(nil), "AddProposal")
	proto.RegisterType((*AcceptProposalGroup)(nil), "AcceptProposalGroup")
	proto.RegisterType((*StartBallPlacement)(nil), "StartBallPlacement")
	proto.RegisterType((*Continue)(nil), "Continue")
	proto.RegisterType((*UpdateConfig)(nil), "UpdateConfig")
	proto.RegisterType((*UpdateTeamState)(nil), "UpdateTeamState")
	proto.RegisterType((*SwitchColors)(nil), "SwitchColors")
	proto.RegisterType((*Revert)(nil), "Revert")
	proto.RegisterType((*NewGameState)(nil), "NewGameState")
}

func init() {
	proto.RegisterFile("ssl_gc_change.proto", fileDescriptor_f0de3f29222370fd)
}

var fileDescriptor_f0de3f29222370fd = []byte{
	// 1453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x6f, 0x73, 0xdb, 0x4e,
	0x11, 0xb6, 0xd3, 0xda, 0x91, 0xd7, 0x7f, 0x73, 0x4e, 0x5a, 0xb5, 0x74, 0x48, 0x70, 0x29, 0xa4,
	0xd0, 0xc8, 0x6d, 0x28, 0x4c, 0x69, 0x67, 0x18, 0x1a, 0xb7, 0xa9, 0x4b, 0x3b, 0x25, 0x9c, 0x0b,
	0x33, 0xf0, 0x46, 0x73, 0x96, 0xce, 0x8e, 0x26, 0x92, 0x4e, 0xdc, 0x9d, 0x92, 0xc9, 0xa7, 0xe0,
	0x13, 0xf0, 0x49, 0x78, 0xcb, 0x07, 0x63, 0x6e, 0x75, 0x92, 0x95, 0xa6, 0x33, 0xc0, 0x8b, 0xdf,
	0x2b, 0x7b, 0x9f, 0xdd, 0xbd, 0x5d, 0xed, 0xde, 0x3e, 0x7b, 0x30, 0x56, 0x2a, 0xf6, 0xd7, 0x81,
	0x1f, 0x9c, 0xb3, 0x74, 0xcd, 0xbd, 0x4c, 0x0a, 0x2d, 0x1e, 0x12, 0x0b, 0x2a, 0xcd, 0x74, 0x89,
	0x55, 0x86, 0x22, 0x49, 0x44, 0x6a, 0xc1, 0x3d, 0x0b, 0xae, 0xb9, 0x48, 0xb8, 0x96, 0xd7, 0x16,
	0xbe, 0x5f, 0xc2, 0x2c, 0xe1, 0x3e, 0xbf, 0xe4, 0xa9, 0xb6, 0x8a, 0x47, 0x56, 0x21, 0xf9, 0x8a,
	0x4b, 0xce, 0xfd, 0x84, 0x2b, 0xc5, 0xaa, 0xb0, 0xfb, 0x6b, 0x21, 0xd6, 0x31, 0x9f, 0xa2, 0xb4,
	0xcc, 0x57, 0x53, 0x1d, 0x25, 0x5c, 0x69, 0x96, 0x64, 0x85, 0xc1, 0xe4, 0x5f, 0x4d, 0xe8, 0x2e,
	0x4c, 0x4e, 0x33, 0xcc, 0x96, 0x0c, 0x60, 0x2b, 0x0a, 0xdd, 0xe6, 0x41, 0xf3, 0xb0, 0x45, 0xb7,
	0xa2, 0x90, 0x3c, 0x86, 0x0e, 0xa6, 0xec, 0x67, 0x92, 0xbb, 0x5b, 0x07, 0xcd, 0xc3, 0xee, 0x71,
	0xdb, 0x43, 0x07, 0xea, 0xa0, 0xe2, 0x4c, 0x72, 0xf2, 0x08, 0x5a, 0xf8, 0xdf, 0xbd, 0x73, 0xc3,
	0xa0, 0x00, 0xc9, 0x3e, 0xb4, 0x8b, 0x52, 0xb8, 0x77, 0x51, 0xbd, 0xed, 0x15, 0xb1, 0xa8, 0x85,
	0xc9, 0x2b, 0xe8, 0x54, 0x69, 0xb9, 0x2d, 0xb4, 0x79, 0xe8, 0x15, 0x89, 0x7b, 0x65, 0xe2, 0xde,
	0xd7, 0xd2, 0x82, 0x6e, 0x8c, 0x27, 0xff, 0x74, 0xa0, 0x6d, 0x13, 0xbf, 0x07, 0x6d, 0x21, 0xa3,
	0x75, 0x94, 0x62, 0xf2, 0x1d, 0x6a, 0x25, 0xf2, 0x63, 0x00, 0xc9, 0x2f, 0xb9, 0xd4, 0xd1, 0x32,
	0xe6, 0xee, 0xe8, 0xa0, 0x79, 0xe8, 0xd0, 0x1a, 0x42, 0x3c, 0xe8, 0xa6, 0xfc, 0x0a, 0x7b, 0xc0,
	0xd2, 0xd0, 0x7e, 0x62, 0xd7, 0xfb, 0xc2, 0xaf, 0x66, 0x05, 0x34, 0x6f, 0x50, 0x48, 0x2b, 0x89,
	0xbc, 0x80, 0x5e, 0x91, 0xb6, 0x69, 0xe5, 0xba, 0xfc, 0xe4, 0x9e, 0xfd, 0xa6, 0x85, 0xc1, 0xe6,
	0x0d, 0xda, 0x0d, 0x36, 0x22, 0xf9, 0x04, 0xf7, 0x14, 0xd7, 0xfe, 0x92, 0xc5, 0xb1, 0x9f, 0xc5,
	0x2c, 0xe0, 0x09, 0x4f, 0xb5, 0x9f, 0x09, 0x65, 0x0b, 0xb2, 0xeb, 0x2d, 0xb8, 0x3e, 0x61, 0x71,
	0x7c, 0x56, 0x2a, 0xcf, 0x84, 0x9a, 0x37, 0xe8, 0x58, 0xdd, 0x86, 0xc9, 0x2b, 0x18, 0xb2, 0x30,
	0xf4, 0xaf, 0x79, 0x1c, 0x8b, 0x2b, 0x3f, 0x60, 0x32, 0xb4, 0x25, 0x1b, 0x78, 0x6f, 0xc3, 0xf0,
	0xaf, 0x08, 0xcf, 0x98, 0x34, 0x69, 0xf7, 0x59, 0x1d, 0x20, 0x53, 0xe8, 0x19, 0x4f, 0xc9, 0xc3,
	0xc2, 0xad, 0x6d, 0x3f, 0xf5, 0x6d, 0x18, 0x52, 0x1e, 0x5a, 0x1f, 0x60, 0x95, 0x44, 0xde, 0xc0,
	0xa8, 0x16, 0xc6, 0x17, 0x97, 0x5c, 0xba, 0xdb, 0xe8, 0x34, 0xf4, 0x36, 0xe7, 0xfe, 0xf1, 0x92,
	0xcb, 0x79, 0x83, 0x0e, 0xae, 0x6f, 0x20, 0xe4, 0xd7, 0x30, 0x30, 0xd1, 0x36, 0xf7, 0xd5, 0x75,
	0xd0, 0xb5, 0x6f, 0xe2, 0x7d, 0x60, 0x09, 0x7f, 0x6f, 0xc0, 0x79, 0x83, 0x9a, 0xa4, 0x2a, 0xd9,
	0xd4, 0xca, 0xb8, 0x65, 0x4c, 0xa9, 0xe8, 0x92, 0xd7, 0xdd, 0xc7, 0xb6, 0x56, 0x6f, 0xc3, 0xf0,
	0xac, 0xd0, 0xd6, 0x4f, 0x19, 0xb3, 0xdb, 0xb0, 0xe9, 0x15, 0x1e, 0x26, 0x45, 0x26, 0x14, 0x8b,
	0xdd, 0x8e, 0xed, 0x95, 0x39, 0xc2, 0x62, 0xa6, 0x57, 0x6c, 0x23, 0x92, 0x0f, 0xb0, 0xab, 0x34,
	0x93, 0xdf, 0x76, 0xcb, 0x05, 0x74, 0x1d, 0x9b, 0x9b, 0x2d, 0x6f, 0x36, 0x65, 0xde, 0xa0, 0x44,
	0xdd, 0x42, 0xc9, 0xcf, 0xc1, 0x09, 0x44, 0xaa, 0xa3, 0x34, 0xe7, 0x6e, 0x17, 0x9d, 0x3b, 0xde,
	0xcc, 0x02, 0xf3, 0x06, 0xad, 0x94, 0xe4, 0x25, 0xf4, 0xf3, 0x2c, 0x34, 0x23, 0x16, 0x88, 0x74,
	0x15, 0xad, 0xdd, 0x9e, 0xad, 0xd3, 0x9f, 0x11, 0x9d, 0x21, 0x68, 0xea, 0x94, 0xd7, 0x64, 0xf2,
	0x3b, 0xd8, 0xb1, 0x5e, 0x9a, 0xb3, 0xa4, 0xa0, 0x15, 0xb7, 0x8f, 0x9e, 0x23, 0xeb, 0xf9, 0x95,
	0xb3, 0x04, 0x07, 0x71, 0xde, 0xa0, 0xc3, 0xfc, 0x26, 0x64, 0xa2, 0xaa, 0xab, 0x48, 0x07, 0xe7,
	0x7e, 0x20, 0x62, 0x21, 0x95, 0x3b, 0xb0, 0x51, 0x17, 0x88, 0xce, 0x10, 0x34, 0x51, 0x55, 0x4d,
	0x26, 0x3f, 0x81, 0x76, 0x31, 0x3a, 0xee, 0xd0, 0x8e, 0x32, 0x45, 0x71, 0xde, 0xa0, 0x56, 0x61,
	0xfa, 0x6e, 0xe6, 0x09, 0x1b, 0x57, 0x64, 0xb5, 0x63, 0x4f, 0xfe, 0xc2, 0xaf, 0x4c, 0x6b, 0xca,
	0x94, 0x7a, 0x69, 0x4d, 0x26, 0x7f, 0x80, 0x3d, 0x16, 0x04, 0x3c, 0xd3, 0x55, 0xb7, 0xfc, 0xb5,
	0x14, 0x79, 0xe6, 0x92, 0xb2, 0xed, 0xa8, 0x2d, 0xfb, 0xf4, 0xc1, 0xe8, 0xb0, 0xed, 0xb7, 0xe1,
	0x13, 0xa7, 0x24, 0x9c, 0xc9, 0x73, 0x80, 0xcd, 0x20, 0x93, 0x09, 0x6c, 0x97, 0x63, 0xde, 0xc4,
	0x53, 0x1d, 0xcf, 0xaa, 0x68, 0xa9, 0x98, 0xbc, 0x86, 0x6e, 0x6d, 0x92, 0xc9, 0x2f, 0xa1, 0x63,
	0xbe, 0xa6, 0x18, 0x75, 0xe3, 0x34, 0x38, 0x1e, 0x78, 0xb4, 0xa0, 0x5a, 0x0f, 0x4d, 0xa8, 0x93,
	0xf2, 0x2b, 0xfc, 0x37, 0x79, 0x01, 0xe3, 0xef, 0x0c, 0x32, 0x79, 0x08, 0x77, 0xcc, 0xac, 0x97,
	0x21, 0xff, 0xc2, 0x03, 0x2d, 0xe4, 0x31, 0x35, 0xe0, 0x24, 0x85, 0xfe, 0x8d, 0xa9, 0x25, 0x07,
	0xe0, 0xac, 0x84, 0xc4, 0xa6, 0xda, 0x78, 0x2d, 0xcf, 0x74, 0x8d, 0x6e, 0xaf, 0x84, 0x34, 0x7f,
	0xc8, 0x1b, 0xd8, 0x0d, 0x58, 0xae, 0x78, 0xe8, 0x2f, 0xaf, 0xeb, 0xf3, 0x51, 0x30, 0x17, 0x78,
	0xd5, 0xf5, 0xa7, 0x3b, 0x85, 0xdd, 0xc9, 0x75, 0x05, 0x4d, 0x2e, 0x00, 0x36, 0xe3, 0xfe, 0x43,
	0x07, 0x3b, 0x86, 0xc1, 0x4d, 0x9a, 0xf8, 0xef, 0x01, 0x27, 0xbf, 0x85, 0x5e, 0x9d, 0x1f, 0xc8,
	0x53, 0x80, 0x5a, 0xd8, 0xe6, 0xad, 0xb0, 0x9d, 0x75, 0x15, 0xee, 0xf7, 0x30, 0xfe, 0x0e, 0x37,
	0xfc, 0x3f, 0x27, 0xbc, 0x84, 0x6e, 0x8d, 0x1a, 0xc8, 0x13, 0x70, 0x2a, 0xea, 0x68, 0xda, 0x11,
	0x2e, 0x95, 0xb4, 0x52, 0x4d, 0xfe, 0x04, 0xe3, 0xef, 0x5c, 0x4e, 0xf2, 0x00, 0x1c, 0xbc, 0xc1,
	0xbe, 0xdd, 0xa7, 0x7d, 0xba, 0x8d, 0xf2, 0xc7, 0x90, 0xec, 0x43, 0xb7, 0xb8, 0xb7, 0x58, 0x57,
	0x2c, 0x66, 0x87, 0x42, 0x09, 0x9d, 0x5c, 0x4f, 0x76, 0x81, 0xdc, 0x26, 0x9a, 0x09, 0x80, 0x53,
	0x32, 0xc8, 0xe4, 0x1f, 0x4d, 0xe8, 0xd5, 0x09, 0xc2, 0x24, 0x1b, 0x46, 0x97, 0x91, 0x8a, 0x44,
	0x6a, 0x4b, 0xdb, 0xf1, 0xde, 0x59, 0x80, 0x56, 0x2a, 0xf2, 0x2b, 0x20, 0xab, 0x48, 0x2a, 0xed,
	0x5f, 0x44, 0xc1, 0x85, 0x58, 0xad, 0x8a, 0x5e, 0x6c, 0xd5, 0x7b, 0x31, 0x42, 0x83, 0x4f, 0x85,
	0x1e, 0x6f, 0xc1, 0x63, 0xe8, 0xb3, 0x5c, 0x0b, 0xbf, 0x22, 0xb4, 0x3b, 0xb8, 0x46, 0x7b, 0x06,
	0xac, 0x32, 0xfa, 0x77, 0x1b, 0x86, 0xdf, 0x10, 0xcf, 0xff, 0x70, 0xc1, 0x7e, 0x04, 0x1d, 0x24,
	0xb0, 0x94, 0x25, 0xdc, 0x16, 0xc2, 0x31, 0xc0, 0x17, 0x96, 0x70, 0xb2, 0x0b, 0xad, 0xb5, 0x60,
	0xb1, 0xc2, 0x78, 0x2d, 0x5a, 0x08, 0x66, 0xa3, 0x9b, 0x3f, 0x17, 0x9c, 0x67, 0x5c, 0xe2, 0x0a,
	0x6d, 0xd1, 0x1a, 0x62, 0xb2, 0x35, 0x2f, 0x04, 0x91, 0x6b, 0xe5, 0xc7, 0x7c, 0xa5, 0x71, 0x3f,
	0xb6, 0x68, 0xaf, 0x04, 0x3f, 0xf3, 0x95, 0x26, 0xbf, 0x80, 0x1d, 0x2b, 0xfb, 0xe6, 0xb7, 0x30,
	0x6c, 0x63, 0xfc, 0xa1, 0x55, 0x98, 0x17, 0x07, 0xda, 0x1e, 0xc2, 0x48, 0xa4, 0x66, 0x5f, 0x47,
	0xda, 0xec, 0xa4, 0x73, 0x16, 0xaf, 0x70, 0x0f, 0x3a, 0x74, 0x20, 0xd2, 0x33, 0x0b, 0xcf, 0x59,
	0xbc, 0x22, 0xbf, 0x81, 0xfb, 0xdf, 0x6c, 0xf9, 0x15, 0x8b, 0xe2, 0x5c, 0x72, 0x85, 0xdb, 0xaf,
	0x45, 0xf7, 0x96, 0xf5, 0x8e, 0x9e, 0x5a, 0x25, 0xf9, 0x29, 0x0c, 0x02, 0x96, 0x16, 0x6e, 0xb8,
	0x79, 0x70, 0x55, 0x39, 0xb4, 0x17, 0xb0, 0x14, 0xad, 0xcd, 0x45, 0x20, 0xcf, 0x61, 0x37, 0x38,
	0x67, 0x71, 0xcc, 0xcd, 0xeb, 0x63, 0x15, 0xb3, 0xb5, 0xfd, 0xbe, 0x3d, 0x3c, 0x9a, 0x54, 0xba,
	0x53, 0xa3, 0xc2, 0xcc, 0x5f, 0xc3, 0x03, 0xc9, 0xff, 0x9e, 0x73, 0xa5, 0x95, 0xbf, 0x14, 0xda,
	0x57, 0xf9, 0x52, 0xe9, 0x48, 0xe7, 0xda, 0xdc, 0x12, 0xc0, 0x10, 0xf7, 0x4b, 0x83, 0x13, 0xa1,
	0x17, 0x35, 0x35, 0x79, 0x0a, 0xa3, 0xca, 0xd7, 0x56, 0x04, 0xa9, 0xdc, 0xa1, 0xc3, 0x12, 0xff,
	0x5a, 0xc0, 0xe4, 0x08, 0x48, 0x65, 0x5a, 0x65, 0x81, 0xcc, 0xed, 0xd0, 0x9d, 0x52, 0x33, 0x2b,
	0x15, 0xa6, 0x4a, 0x95, 0x39, 0x4f, 0xb8, 0x5c, 0xf3, 0x34, 0xb8, 0xf6, 0x95, 0x16, 0x19, 0x2e,
	0x79, 0x87, 0xee, 0x95, 0xea, 0xf7, 0xa5, 0x76, 0xa1, 0x45, 0x46, 0x9e, 0x41, 0xb7, 0xfe, 0xec,
	0xd9, 0xb5, 0xef, 0x97, 0x0d, 0xc7, 0x50, 0xd8, 0x3c, 0x42, 0xc8, 0x63, 0x70, 0xaa, 0xa7, 0x4e,
	0xcf, 0x72, 0xaf, 0x25, 0x3e, 0xba, 0x2d, 0x2d, 0x03, 0x3e, 0x80, 0xbb, 0x2b, 0x91, 0xc7, 0x76,
	0x73, 0xb6, 0xbc, 0x53, 0x91, 0xc7, 0x14, 0x21, 0xf2, 0xcc, 0x7c, 0x54, 0x22, 0x2e, 0xf9, 0x8d,
	0xb7, 0xd6, 0x00, 0x27, 0x79, 0x54, 0x68, 0x6a, 0xbc, 0xfd, 0x33, 0x18, 0x5a, 0xeb, 0x2a, 0xe8,
	0x10, 0x4d, 0xfb, 0x05, 0x5c, 0x52, 0xee, 0x3e, 0x74, 0xad, 0x1d, 0xc6, 0x1d, 0xa1, 0x0d, 0x14,
	0x90, 0x09, 0x3e, 0x19, 0x40, 0xaf, 0xbe, 0x82, 0x27, 0x4f, 0xa0, 0x5d, 0xec, 0x58, 0x33, 0x2a,
	0xf6, 0xe5, 0x59, 0xbd, 0xd0, 0x9d, 0x02, 0xf8, 0x18, 0x1a, 0xde, 0xac, 0xef, 0xd7, 0x8a, 0xf5,
	0x8a, 0x15, 0x5c, 0x67, 0xbd, 0xe2, 0x6d, 0x8e, 0xac, 0x87, 0x7f, 0x4f, 0x4e, 0xff, 0xf6, 0x6e,
	0x1d, 0xe9, 0xf3, 0x7c, 0xe9, 0x05, 0x22, 0x99, 0x52, 0xb1, 0x14, 0xb3, 0x3c, 0x3b, 0x5a, 0x2c,
	0x3e, 0x4f, 0x95, 0x8a, 0x8f, 0x8c, 0xdd, 0x91, 0x19, 0x7c, 0x29, 0xe2, 0x98, 0xcb, 0x69, 0x94,
	0x6a, 0x2e, 0x53, 0x16, 0x4f, 0x59, 0x96, 0x4d, 0xf1, 0xf4, 0x84, 0x05, 0xe7, 0x51, 0xca, 0xff,
	0x13, 0x00, 0x00, 0xff, 0xff, 0xda, 0x08, 0xa5, 0x4a, 0xf8, 0x0c, 0x00, 0x00,
}
