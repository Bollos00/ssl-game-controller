// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssl_game_controller_state.proto

package state

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Division int32

const (
	Division_DIV_UNKNOWN Division = 0
	Division_DIV_A       Division = 1
	Division_DIV_B       Division = 2
)

var Division_name = map[int32]string{
	0: "DIV_UNKNOWN",
	1: "DIV_A",
	2: "DIV_B",
}

var Division_value = map[string]int32{
	"DIV_UNKNOWN": 0,
	"DIV_A":       1,
	"DIV_B":       2,
}

func (x Division) Enum() *Division {
	p := new(Division)
	*p = x
	return p
}

func (x Division) String() string {
	return proto.EnumName(Division_name, int32(x))
}

func (x *Division) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Division_value, data, "Division")
	if err != nil {
		return err
	}
	*x = Division(value)
	return nil
}

func (Division) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_981cdc3c68aa3560, []int{0}
}

type GameEventBehavior int32

const (
	GameEventBehavior_GAME_EVENT_BEHAVIOR_UNKNOWN  GameEventBehavior = 0
	GameEventBehavior_GAME_EVENT_BEHAVIOR_On       GameEventBehavior = 1
	GameEventBehavior_GAME_EVENT_BEHAVIOR_MAJORITY GameEventBehavior = 2
	GameEventBehavior_GAME_EVENT_BEHAVIOR_OFF      GameEventBehavior = 3
)

var GameEventBehavior_name = map[int32]string{
	0: "GAME_EVENT_BEHAVIOR_UNKNOWN",
	1: "GAME_EVENT_BEHAVIOR_On",
	2: "GAME_EVENT_BEHAVIOR_MAJORITY",
	3: "GAME_EVENT_BEHAVIOR_OFF",
}

var GameEventBehavior_value = map[string]int32{
	"GAME_EVENT_BEHAVIOR_UNKNOWN":  0,
	"GAME_EVENT_BEHAVIOR_On":       1,
	"GAME_EVENT_BEHAVIOR_MAJORITY": 2,
	"GAME_EVENT_BEHAVIOR_OFF":      3,
}

func (x GameEventBehavior) Enum() *GameEventBehavior {
	p := new(GameEventBehavior)
	*p = x
	return p
}

func (x GameEventBehavior) String() string {
	return proto.EnumName(GameEventBehavior_name, int32(x))
}

func (x *GameEventBehavior) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameEventBehavior_value, data, "GameEventBehavior")
	if err != nil {
		return err
	}
	*x = GameEventBehavior(value)
	return nil
}

func (GameEventBehavior) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_981cdc3c68aa3560, []int{1}
}

type Command_Type int32

const (
	Command_UNKNOWN        Command_Type = 0
	Command_HALT           Command_Type = 1
	Command_STOP           Command_Type = 2
	Command_NORMAL_START   Command_Type = 3
	Command_FORCE_START    Command_Type = 4
	Command_DIRECT         Command_Type = 5
	Command_INDIRECT       Command_Type = 6
	Command_KICKOFF        Command_Type = 7
	Command_PENALTY        Command_Type = 8
	Command_TIMEOUT        Command_Type = 9
	Command_BALL_PLACEMENT Command_Type = 10
)

var Command_Type_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "HALT",
	2:  "STOP",
	3:  "NORMAL_START",
	4:  "FORCE_START",
	5:  "DIRECT",
	6:  "INDIRECT",
	7:  "KICKOFF",
	8:  "PENALTY",
	9:  "TIMEOUT",
	10: "BALL_PLACEMENT",
}

var Command_Type_value = map[string]int32{
	"UNKNOWN":        0,
	"HALT":           1,
	"STOP":           2,
	"NORMAL_START":   3,
	"FORCE_START":    4,
	"DIRECT":         5,
	"INDIRECT":       6,
	"KICKOFF":        7,
	"PENALTY":        8,
	"TIMEOUT":        9,
	"BALL_PLACEMENT": 10,
}

func (x Command_Type) Enum() *Command_Type {
	p := new(Command_Type)
	*p = x
	return p
}

func (x Command_Type) String() string {
	return proto.EnumName(Command_Type_name, int32(x))
}

func (x *Command_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Command_Type_value, data, "Command_Type")
	if err != nil {
		return err
	}
	*x = Command_Type(value)
	return nil
}

func (Command_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_981cdc3c68aa3560, []int{3, 0}
}

type YellowCard struct {
	Id                   *uint32            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CausedByGameEvent    *GameEvent         `protobuf:"bytes,2,opt,name=caused_by_game_event,json=causedByGameEvent" json:"caused_by_game_event,omitempty"`
	TimeRemaining        *duration.Duration `protobuf:"bytes,3,opt,name=time_remaining,json=timeRemaining" json:"time_remaining,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *YellowCard) Reset()         { *m = YellowCard{} }
func (m *YellowCard) String() string { return proto.CompactTextString(m) }
func (*YellowCard) ProtoMessage()    {}
func (*YellowCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_981cdc3c68aa3560, []int{0}
}

func (m *YellowCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YellowCard.Unmarshal(m, b)
}
func (m *YellowCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YellowCard.Marshal(b, m, deterministic)
}
func (m *YellowCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YellowCard.Merge(m, src)
}
func (m *YellowCard) XXX_Size() int {
	return xxx_messageInfo_YellowCard.Size(m)
}
func (m *YellowCard) XXX_DiscardUnknown() {
	xxx_messageInfo_YellowCard.DiscardUnknown(m)
}

var xxx_messageInfo_YellowCard proto.InternalMessageInfo

func (m *YellowCard) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *YellowCard) GetCausedByGameEvent() *GameEvent {
	if m != nil {
		return m.CausedByGameEvent
	}
	return nil
}

func (m *YellowCard) GetTimeRemaining() *duration.Duration {
	if m != nil {
		return m.TimeRemaining
	}
	return nil
}

type RedCard struct {
	Id                   *uint32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CausedByGameEvent    *GameEvent `protobuf:"bytes,2,opt,name=caused_by_game_event,json=causedByGameEvent" json:"caused_by_game_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RedCard) Reset()         { *m = RedCard{} }
func (m *RedCard) String() string { return proto.CompactTextString(m) }
func (*RedCard) ProtoMessage()    {}
func (*RedCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_981cdc3c68aa3560, []int{1}
}

func (m *RedCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedCard.Unmarshal(m, b)
}
func (m *RedCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedCard.Marshal(b, m, deterministic)
}
func (m *RedCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedCard.Merge(m, src)
}
func (m *RedCard) XXX_Size() int {
	return xxx_messageInfo_RedCard.Size(m)
}
func (m *RedCard) XXX_DiscardUnknown() {
	xxx_messageInfo_RedCard.DiscardUnknown(m)
}

var xxx_messageInfo_RedCard proto.InternalMessageInfo

func (m *RedCard) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RedCard) GetCausedByGameEvent() *GameEvent {
	if m != nil {
		return m.CausedByGameEvent
	}
	return nil
}

type Foul struct {
	Id                   *uint32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CausedByGameEvent    *GameEvent `protobuf:"bytes,2,opt,name=caused_by_game_event,json=causedByGameEvent" json:"caused_by_game_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Foul) Reset()         { *m = Foul{} }
func (m *Foul) String() string { return proto.CompactTextString(m) }
func (*Foul) ProtoMessage()    {}
func (*Foul) Descriptor() ([]byte, []int) {
	return fileDescriptor_981cdc3c68aa3560, []int{2}
}

func (m *Foul) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Foul.Unmarshal(m, b)
}
func (m *Foul) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Foul.Marshal(b, m, deterministic)
}
func (m *Foul) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Foul.Merge(m, src)
}
func (m *Foul) XXX_Size() int {
	return xxx_messageInfo_Foul.Size(m)
}
func (m *Foul) XXX_DiscardUnknown() {
	xxx_messageInfo_Foul.DiscardUnknown(m)
}

var xxx_messageInfo_Foul proto.InternalMessageInfo

func (m *Foul) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Foul) GetCausedByGameEvent() *GameEvent {
	if m != nil {
		return m.CausedByGameEvent
	}
	return nil
}

type Command struct {
	Type                 *Command_Type `protobuf:"varint,1,req,name=type,enum=Command_Type" json:"type,omitempty"`
	ForTeam              *Team         `protobuf:"varint,2,opt,name=for_team,json=forTeam,enum=Team" json:"for_team,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_981cdc3c68aa3560, []int{3}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetType() Command_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Command_UNKNOWN
}

func (m *Command) GetForTeam() Team {
	if m != nil && m.ForTeam != nil {
		return *m.ForTeam
	}
	return Team_UNKNOWN
}

type TeamInfo struct {
	Name                         *string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Goals                        *int32             `protobuf:"varint,2,opt,name=goals" json:"goals,omitempty"`
	Goalkeeper                   *int32             `protobuf:"varint,3,opt,name=goalkeeper" json:"goalkeeper,omitempty"`
	YellowCards                  []*YellowCard      `protobuf:"bytes,4,rep,name=yellow_cards,json=yellowCards" json:"yellow_cards,omitempty"`
	RedCards                     []*RedCard         `protobuf:"bytes,5,rep,name=red_cards,json=redCards" json:"red_cards,omitempty"`
	TimeoutsLeft                 *int32             `protobuf:"varint,6,opt,name=timeouts_left,json=timeoutsLeft" json:"timeouts_left,omitempty"`
	TimeoutTimeLeft              *duration.Duration `protobuf:"bytes,7,opt,name=timeout_time_left,json=timeoutTimeLeft" json:"timeout_time_left,omitempty"`
	OnPositiveHalf               *bool              `protobuf:"varint,8,opt,name=on_positive_half,json=onPositiveHalf" json:"on_positive_half,omitempty"`
	Fouls                        []*Foul            `protobuf:"bytes,9,rep,name=fouls" json:"fouls,omitempty"`
	BallPlacementFailures        *int32             `protobuf:"varint,10,opt,name=ball_placement_failures,json=ballPlacementFailures" json:"ball_placement_failures,omitempty"`
	BallPlacementFailuresReached *bool              `protobuf:"varint,11,opt,name=ball_placement_failures_reached,json=ballPlacementFailuresReached" json:"ball_placement_failures_reached,omitempty"`
	CanPlaceBall                 *bool              `protobuf:"varint,12,opt,name=can_place_ball,json=canPlaceBall" json:"can_place_ball,omitempty"`
	MaxAllowedBots               *int32             `protobuf:"varint,13,opt,name=max_allowed_bots,json=maxAllowedBots" json:"max_allowed_bots,omitempty"`
	BotSubstitutionIntend        *bool              `protobuf:"varint,14,opt,name=bot_substitution_intend,json=botSubstitutionIntend" json:"bot_substitution_intend,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}           `json:"-"`
	XXX_unrecognized             []byte             `json:"-"`
	XXX_sizecache                int32              `json:"-"`
}

func (m *TeamInfo) Reset()         { *m = TeamInfo{} }
func (m *TeamInfo) String() string { return proto.CompactTextString(m) }
func (*TeamInfo) ProtoMessage()    {}
func (*TeamInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_981cdc3c68aa3560, []int{4}
}

func (m *TeamInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamInfo.Unmarshal(m, b)
}
func (m *TeamInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamInfo.Marshal(b, m, deterministic)
}
func (m *TeamInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamInfo.Merge(m, src)
}
func (m *TeamInfo) XXX_Size() int {
	return xxx_messageInfo_TeamInfo.Size(m)
}
func (m *TeamInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeamInfo proto.InternalMessageInfo

func (m *TeamInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TeamInfo) GetGoals() int32 {
	if m != nil && m.Goals != nil {
		return *m.Goals
	}
	return 0
}

func (m *TeamInfo) GetGoalkeeper() int32 {
	if m != nil && m.Goalkeeper != nil {
		return *m.Goalkeeper
	}
	return 0
}

func (m *TeamInfo) GetYellowCards() []*YellowCard {
	if m != nil {
		return m.YellowCards
	}
	return nil
}

func (m *TeamInfo) GetRedCards() []*RedCard {
	if m != nil {
		return m.RedCards
	}
	return nil
}

func (m *TeamInfo) GetTimeoutsLeft() int32 {
	if m != nil && m.TimeoutsLeft != nil {
		return *m.TimeoutsLeft
	}
	return 0
}

func (m *TeamInfo) GetTimeoutTimeLeft() *duration.Duration {
	if m != nil {
		return m.TimeoutTimeLeft
	}
	return nil
}

func (m *TeamInfo) GetOnPositiveHalf() bool {
	if m != nil && m.OnPositiveHalf != nil {
		return *m.OnPositiveHalf
	}
	return false
}

func (m *TeamInfo) GetFouls() []*Foul {
	if m != nil {
		return m.Fouls
	}
	return nil
}

func (m *TeamInfo) GetBallPlacementFailures() int32 {
	if m != nil && m.BallPlacementFailures != nil {
		return *m.BallPlacementFailures
	}
	return 0
}

func (m *TeamInfo) GetBallPlacementFailuresReached() bool {
	if m != nil && m.BallPlacementFailuresReached != nil {
		return *m.BallPlacementFailuresReached
	}
	return false
}

func (m *TeamInfo) GetCanPlaceBall() bool {
	if m != nil && m.CanPlaceBall != nil {
		return *m.CanPlaceBall
	}
	return false
}

func (m *TeamInfo) GetMaxAllowedBots() int32 {
	if m != nil && m.MaxAllowedBots != nil {
		return *m.MaxAllowedBots
	}
	return 0
}

func (m *TeamInfo) GetBotSubstitutionIntend() bool {
	if m != nil && m.BotSubstitutionIntend != nil {
		return *m.BotSubstitutionIntend
	}
	return false
}

type State struct {
	Stage                      *Referee_Stage              `protobuf:"varint,1,opt,name=stage,enum=Referee_Stage" json:"stage,omitempty"`
	Command                    *Command                    `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
	StageTimeElapsed           *duration.Duration          `protobuf:"bytes,4,opt,name=stage_time_elapsed,json=stageTimeElapsed" json:"stage_time_elapsed,omitempty"`
	StageTimeLeft              *duration.Duration          `protobuf:"bytes,5,opt,name=stage_time_left,json=stageTimeLeft" json:"stage_time_left,omitempty"`
	MatchTimeStart             *timestamp.Timestamp        `protobuf:"bytes,6,opt,name=match_time_start,json=matchTimeStart" json:"match_time_start,omitempty"`
	MatchDuration              *duration.Duration          `protobuf:"bytes,7,opt,name=match_duration,json=matchDuration" json:"match_duration,omitempty"`
	TeamState                  map[int32]*TeamInfo         `protobuf:"bytes,8,rep,name=team_state,json=teamState" json:"team_state,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PlacementPos               *Location                   `protobuf:"bytes,9,opt,name=placement_pos,json=placementPos" json:"placement_pos,omitempty"`
	NextCommand                *Command                    `protobuf:"bytes,10,opt,name=next_command,json=nextCommand" json:"next_command,omitempty"`
	CurrentActionTimeRemaining *duration.Duration          `protobuf:"bytes,12,opt,name=current_action_time_remaining,json=currentActionTimeRemaining" json:"current_action_time_remaining,omitempty"`
	GameEvents                 []*GameEvent                `protobuf:"bytes,13,rep,name=game_events,json=gameEvents" json:"game_events,omitempty"`
	ProposedGameEvents         []*ProposedGameEvent        `protobuf:"bytes,14,rep,name=proposed_game_events,json=proposedGameEvents" json:"proposed_game_events,omitempty"`
	Division                   *Division                   `protobuf:"varint,15,opt,name=division,enum=Division" json:"division,omitempty"`
	AutoContinue               *bool                       `protobuf:"varint,16,opt,name=auto_continue,json=autoContinue" json:"auto_continue,omitempty"`
	FirstKickoffTeam           *Team                       `protobuf:"varint,17,opt,name=first_kickoff_team,json=firstKickoffTeam,enum=Team" json:"first_kickoff_team,omitempty"`
	GameEventBehavior          map[int32]GameEventBehavior `protobuf:"bytes,18,rep,name=game_event_behavior,json=gameEventBehavior" json:"game_event_behavior,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=GameEventBehavior"`
	XXX_NoUnkeyedLiteral       struct{}                    `json:"-"`
	XXX_unrecognized           []byte                      `json:"-"`
	XXX_sizecache              int32                       `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_981cdc3c68aa3560, []int{5}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetStage() Referee_Stage {
	if m != nil && m.Stage != nil {
		return *m.Stage
	}
	return Referee_NORMAL_FIRST_HALF_PRE
}

func (m *State) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *State) GetStageTimeElapsed() *duration.Duration {
	if m != nil {
		return m.StageTimeElapsed
	}
	return nil
}

func (m *State) GetStageTimeLeft() *duration.Duration {
	if m != nil {
		return m.StageTimeLeft
	}
	return nil
}

func (m *State) GetMatchTimeStart() *timestamp.Timestamp {
	if m != nil {
		return m.MatchTimeStart
	}
	return nil
}

func (m *State) GetMatchDuration() *duration.Duration {
	if m != nil {
		return m.MatchDuration
	}
	return nil
}

func (m *State) GetTeamState() map[int32]*TeamInfo {
	if m != nil {
		return m.TeamState
	}
	return nil
}

func (m *State) GetPlacementPos() *Location {
	if m != nil {
		return m.PlacementPos
	}
	return nil
}

func (m *State) GetNextCommand() *Command {
	if m != nil {
		return m.NextCommand
	}
	return nil
}

func (m *State) GetCurrentActionTimeRemaining() *duration.Duration {
	if m != nil {
		return m.CurrentActionTimeRemaining
	}
	return nil
}

func (m *State) GetGameEvents() []*GameEvent {
	if m != nil {
		return m.GameEvents
	}
	return nil
}

func (m *State) GetProposedGameEvents() []*ProposedGameEvent {
	if m != nil {
		return m.ProposedGameEvents
	}
	return nil
}

func (m *State) GetDivision() Division {
	if m != nil && m.Division != nil {
		return *m.Division
	}
	return Division_DIV_UNKNOWN
}

func (m *State) GetAutoContinue() bool {
	if m != nil && m.AutoContinue != nil {
		return *m.AutoContinue
	}
	return false
}

func (m *State) GetFirstKickoffTeam() Team {
	if m != nil && m.FirstKickoffTeam != nil {
		return *m.FirstKickoffTeam
	}
	return Team_UNKNOWN
}

func (m *State) GetGameEventBehavior() map[int32]GameEventBehavior {
	if m != nil {
		return m.GameEventBehavior
	}
	return nil
}

func init() {
	proto.RegisterEnum("Division", Division_name, Division_value)
	proto.RegisterEnum("GameEventBehavior", GameEventBehavior_name, GameEventBehavior_value)
	proto.RegisterEnum("Command_Type", Command_Type_name, Command_Type_value)
	proto.RegisterType((*YellowCard)(nil), "YellowCard")
	proto.RegisterType((*RedCard)(nil), "RedCard")
	proto.RegisterType((*Foul)(nil), "Foul")
	proto.RegisterType((*Command)(nil), "Command")
	proto.RegisterType((*TeamInfo)(nil), "TeamInfo")
	proto.RegisterType((*State)(nil), "State")
	proto.RegisterMapType((map[int32]GameEventBehavior)(nil), "State.GameEventBehaviorEntry")
	proto.RegisterMapType((map[int32]*TeamInfo)(nil), "State.TeamStateEntry")
}

func init() {
	proto.RegisterFile("ssl_game_controller_state.proto", fileDescriptor_981cdc3c68aa3560)
}

var fileDescriptor_981cdc3c68aa3560 = []byte{
	// 1276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0xdb, 0xc6,
	0x12, 0x3e, 0x92, 0xc5, 0x98, 0x1a, 0xc9, 0x34, 0xbd, 0x27, 0x3f, 0x3c, 0xce, 0x8f, 0x7d, 0x7c,
	0x72, 0x00, 0x23, 0x41, 0x28, 0x54, 0x2d, 0x8a, 0xa2, 0x45, 0xd1, 0x4a, 0x32, 0xe5, 0xa8, 0x96,
	0x25, 0x61, 0xc5, 0xb8, 0x4d, 0x51, 0x80, 0x58, 0x51, 0x4b, 0x99, 0x30, 0xc9, 0x25, 0xc8, 0xa5,
	0x1b, 0x3d, 0x45, 0x1f, 0xa0, 0x17, 0x7d, 0x91, 0xbe, 0x4e, 0xef, 0xfb, 0x08, 0xc5, 0x2e, 0x49,
	0x49, 0x75, 0x5c, 0x18, 0x2d, 0x72, 0x37, 0x3b, 0x33, 0xdf, 0xc7, 0xd9, 0xdd, 0x6f, 0x67, 0x08,
	0x07, 0x69, 0x1a, 0x38, 0x0b, 0x12, 0x52, 0xc7, 0x65, 0x11, 0x4f, 0x58, 0x10, 0xd0, 0xc4, 0x49,
	0x39, 0xe1, 0xd4, 0x8c, 0x13, 0xc6, 0xd9, 0xbe, 0xb5, 0xf0, 0xf9, 0x65, 0x36, 0x33, 0x5d, 0x16,
	0xb6, 0x30, 0x9b, 0xb1, 0x5e, 0x16, 0xbf, 0x9a, 0x4e, 0x87, 0xad, 0x34, 0x0d, 0x5e, 0x09, 0xdc,
	0xab, 0x35, 0xae, 0x25, 0x11, 0xad, 0x15, 0x23, 0xbd, 0xa6, 0x11, 0x2f, 0x68, 0xba, 0xff, 0x88,
	0x26, 0xa1, 0x1e, 0x4d, 0x68, 0x59, 0xca, 0xb3, 0x05, 0x63, 0x8b, 0x80, 0xe6, 0xf1, 0x59, 0xe6,
	0xb5, 0xe6, 0x59, 0x42, 0xb8, 0xcf, 0xa2, 0x22, 0x7e, 0x70, 0x33, 0xce, 0xfd, 0x90, 0xa6, 0x9c,
	0x84, 0x71, 0x9e, 0x70, 0xf4, 0x73, 0x05, 0xe0, 0x2d, 0x0d, 0x02, 0xf6, 0x63, 0x8f, 0x24, 0x73,
	0xa4, 0x41, 0xd5, 0x9f, 0x1b, 0x95, 0xc3, 0xca, 0xf1, 0x0e, 0xae, 0xfa, 0x73, 0xf4, 0x05, 0xdc,
	0x77, 0x49, 0x96, 0xd2, 0xb9, 0x33, 0x5b, 0x6e, 0xec, 0xc0, 0xa8, 0x1e, 0x56, 0x8e, 0x1b, 0x6d,
	0x30, 0x4f, 0x49, 0x48, 0x2d, 0xe1, 0xc1, 0x7b, 0x79, 0x5e, 0x77, 0xb9, 0x72, 0xa1, 0xaf, 0x41,
	0x13, 0x9f, 0x73, 0x12, 0x1a, 0x12, 0x3f, 0xf2, 0xa3, 0x85, 0xb1, 0x25, 0x61, 0xff, 0x31, 0xf3,
	0xaa, 0xcc, 0xb2, 0x2a, 0xf3, 0xa4, 0xa8, 0x1a, 0xef, 0x08, 0x00, 0x2e, 0xf3, 0x8f, 0x2e, 0x60,
	0x1b, 0xd3, 0xf9, 0x07, 0xaf, 0xec, 0x68, 0x0a, 0xb5, 0x3e, 0xcb, 0x82, 0x0f, 0x4b, 0xfa, 0x7b,
	0x05, 0xb6, 0x7b, 0x2c, 0x0c, 0x49, 0x34, 0x47, 0xff, 0x85, 0x1a, 0x5f, 0xc6, 0xd4, 0xa8, 0x1c,
	0x56, 0x8f, 0xb5, 0xf6, 0x8e, 0x59, 0xf8, 0x4d, 0x7b, 0x19, 0x53, 0x2c, 0x43, 0xe8, 0x10, 0x54,
	0x8f, 0x25, 0x0e, 0xa7, 0x24, 0x94, 0xfc, 0x5a, 0x5b, 0x31, 0x6d, 0x4a, 0x42, 0xbc, 0xed, 0xb1,
	0x44, 0x18, 0x47, 0xbf, 0x54, 0xa0, 0x26, 0x00, 0xa8, 0x01, 0xdb, 0x6f, 0x46, 0x67, 0xa3, 0xf1,
	0xb7, 0x23, 0xfd, 0x5f, 0x48, 0x85, 0xda, 0xeb, 0xce, 0xd0, 0xd6, 0x2b, 0xc2, 0x9a, 0xda, 0xe3,
	0x89, 0x5e, 0x45, 0x3a, 0x34, 0x47, 0x63, 0x7c, 0xde, 0x19, 0x3a, 0x53, 0xbb, 0x83, 0x6d, 0x7d,
	0x0b, 0xed, 0x42, 0xa3, 0x3f, 0xc6, 0x3d, 0xab, 0x70, 0xd4, 0x10, 0xc0, 0xbd, 0x93, 0x01, 0xb6,
	0x7a, 0xb6, 0xae, 0xa0, 0x26, 0xa8, 0x83, 0x51, 0xb1, 0xba, 0x27, 0xd8, 0xcf, 0x06, 0xbd, 0xb3,
	0x71, 0xbf, 0xaf, 0x6f, 0x8b, 0xc5, 0xc4, 0x1a, 0x75, 0x86, 0xf6, 0x5b, 0x5d, 0x15, 0x0b, 0x7b,
	0x70, 0x6e, 0x8d, 0xdf, 0xd8, 0x7a, 0x1d, 0x21, 0xd0, 0xba, 0x9d, 0xe1, 0xd0, 0x99, 0x0c, 0x3b,
	0x3d, 0xeb, 0xdc, 0x1a, 0xd9, 0x3a, 0x1c, 0xfd, 0x56, 0x03, 0x55, 0x94, 0x3a, 0x88, 0x3c, 0x86,
	0x10, 0xd4, 0x22, 0x12, 0x52, 0x79, 0x9c, 0x75, 0x2c, 0x6d, 0x74, 0x1f, 0x94, 0x05, 0x23, 0x41,
	0x2a, 0x77, 0xa8, 0xe0, 0x7c, 0x81, 0x9e, 0x01, 0x08, 0xe3, 0x8a, 0xd2, 0x98, 0x26, 0x52, 0x14,
	0x0a, 0xde, 0xf0, 0x20, 0x13, 0x9a, 0x4b, 0xa9, 0x49, 0xc7, 0x25, 0xc9, 0x3c, 0x35, 0x6a, 0x87,
	0x5b, 0xc7, 0x8d, 0x76, 0xc3, 0x5c, 0x0b, 0x15, 0x37, 0x96, 0x2b, 0x3b, 0x45, 0xff, 0x87, 0x7a,
	0x42, 0xe7, 0x45, 0xb2, 0x22, 0x93, 0x55, 0xb3, 0x10, 0x0e, 0x56, 0x93, 0xdc, 0x48, 0xd1, 0xff,
	0x40, 0xca, 0x8b, 0x65, 0x3c, 0x75, 0x02, 0xea, 0x71, 0xe3, 0x9e, 0xfc, 0x72, 0xb3, 0x74, 0x0e,
	0xa9, 0xc7, 0x91, 0x05, 0x7b, 0xc5, 0xda, 0x91, 0xe2, 0x95, 0x89, 0xdb, 0x77, 0xe9, 0x76, 0xb7,
	0xc0, 0xd8, 0x7e, 0x48, 0x25, 0xcd, 0x31, 0xe8, 0x2c, 0x72, 0x62, 0x96, 0xfa, 0xdc, 0xbf, 0xa6,
	0xce, 0x25, 0x09, 0x3c, 0x43, 0x3d, 0xac, 0x1c, 0xab, 0x58, 0x63, 0xd1, 0xa4, 0x70, 0xbf, 0x26,
	0x81, 0x87, 0x1e, 0x83, 0xe2, 0xb1, 0x2c, 0x48, 0x8d, 0xba, 0x2c, 0x5c, 0x31, 0x85, 0x32, 0x71,
	0xee, 0x43, 0x9f, 0xc2, 0xa3, 0x19, 0x09, 0x02, 0x27, 0x0e, 0x88, 0x4b, 0x43, 0x1a, 0x71, 0xc7,
	0x23, 0x7e, 0x90, 0x25, 0x34, 0x35, 0x40, 0x16, 0xff, 0x40, 0x84, 0x27, 0x65, 0xb4, 0x5f, 0x04,
	0x91, 0x05, 0x07, 0x7f, 0x81, 0x73, 0x12, 0x4a, 0xdc, 0x4b, 0x3a, 0x37, 0x1a, 0xb2, 0x9a, 0x27,
	0xb7, 0xe2, 0x71, 0x9e, 0x83, 0x9e, 0x83, 0xe6, 0x92, 0x28, 0x67, 0x71, 0x44, 0xa6, 0xd1, 0x94,
	0xa8, 0xa6, 0x4b, 0x22, 0x09, 0xea, 0x92, 0x20, 0x10, 0x7b, 0x0d, 0xc9, 0x3b, 0x87, 0x88, 0x0b,
	0x11, 0x4f, 0x87, 0xf1, 0xd4, 0xd8, 0x91, 0xd5, 0x69, 0x21, 0x79, 0xd7, 0xc9, 0xdd, 0x5d, 0xc6,
	0xf3, 0xed, 0x30, 0xee, 0xa4, 0xd9, 0x2c, 0xe5, 0x3e, 0xcf, 0xc4, 0xd1, 0x39, 0x7e, 0xc4, 0x69,
	0x34, 0x37, 0x34, 0x49, 0xfc, 0x60, 0xc6, 0xf8, 0x74, 0x23, 0x3a, 0x90, 0xc1, 0xa3, 0x5f, 0x55,
	0x50, 0xa6, 0xa2, 0x03, 0xa3, 0xe7, 0xa0, 0xa4, 0x9c, 0x2c, 0x72, 0x95, 0x69, 0x6d, 0xcd, 0xc4,
	0x45, 0x3f, 0x9c, 0x0a, 0x2f, 0xce, 0x83, 0xe8, 0x08, 0xb6, 0xdd, 0xfc, 0xc5, 0x15, 0x4f, 0x57,
	0x2d, 0x5f, 0x20, 0x2e, 0x03, 0xe8, 0x14, 0x90, 0x4c, 0xce, 0xaf, 0x99, 0x06, 0x24, 0x4e, 0xe9,
	0xdc, 0xa8, 0xdd, 0x75, 0xd3, 0xba, 0x04, 0x89, 0x7b, 0xb6, 0x72, 0x08, 0xea, 0xc0, 0xee, 0x06,
	0x91, 0xd4, 0x8b, 0x72, 0x67, 0x9f, 0x5b, 0xb1, 0x48, 0xb5, 0x9c, 0x88, 0x13, 0xe4, 0xee, 0x65,
	0x4e, 0x91, 0x72, 0x92, 0xe4, 0xe2, 0x6c, 0xb4, 0xf7, 0xdf, 0xe3, 0xb0, 0xcb, 0x0e, 0x2e, 0x4e,
	0x97, 0xbb, 0x97, 0x62, 0x3d, 0x15, 0x08, 0xd1, 0x6f, 0x73, 0x96, 0x72, 0x08, 0xdc, 0xad, 0xdb,
	0x1d, 0x09, 0x28, 0x97, 0xe8, 0x13, 0x00, 0xd1, 0x8f, 0xf2, 0x69, 0x67, 0xa8, 0x52, 0x90, 0x0f,
	0x4c, 0x79, 0xf2, 0xb2, 0x37, 0x49, 0xcb, 0x8a, 0x78, 0xb2, 0xc4, 0x75, 0x5e, 0xae, 0x91, 0x09,
	0x3b, 0x6b, 0x9d, 0xc5, 0x4c, 0x28, 0x59, 0x7c, 0xb6, 0x6e, 0x0e, 0x99, 0x9b, 0x7f, 0xa6, 0xb9,
	0x8a, 0x4f, 0x58, 0x8a, 0x5e, 0x42, 0x33, 0xa2, 0xef, 0xb8, 0x53, 0x5e, 0x11, 0xdc, 0xb8, 0xa2,
	0x86, 0x88, 0x96, 0x9d, 0xf4, 0x07, 0x78, 0xea, 0x66, 0x49, 0x22, 0xa8, 0x89, 0x2b, 0x05, 0x73,
	0x63, 0xa6, 0x34, 0xef, 0xda, 0xe3, 0x7e, 0x81, 0xef, 0x48, 0xb8, 0xbd, 0x39, 0x60, 0xd0, 0x4b,
	0x68, 0xac, 0xdb, 0xbc, 0x50, 0xed, 0xd6, 0x8d, 0x3e, 0x0f, 0x8b, 0xd2, 0x4c, 0xd1, 0x09, 0xdc,
	0x8f, 0x13, 0x16, 0x33, 0x31, 0x1f, 0x36, 0x51, 0x9a, 0x44, 0x21, 0x73, 0x52, 0x04, 0xd7, 0x68,
	0x14, 0xdf, 0x74, 0x89, 0x66, 0xa5, 0xce, 0xfd, 0x6b, 0x3f, 0x15, 0xf7, 0xb3, 0x2b, 0x45, 0x5c,
	0x37, 0x4f, 0x0a, 0x07, 0x5e, 0x85, 0x44, 0xb3, 0x22, 0x19, 0x67, 0xf2, 0x1f, 0xc4, 0x8f, 0x32,
	0x6a, 0xe8, 0xf9, 0xcb, 0x13, 0xce, 0x5e, 0xe1, 0x43, 0x1f, 0x03, 0xf2, 0xfc, 0x24, 0xe5, 0xce,
	0x95, 0xef, 0x5e, 0x31, 0xcf, 0xcb, 0xa7, 0xc9, 0xde, 0xe6, 0x34, 0xd1, 0x65, 0xc2, 0x59, 0x1e,
	0x17, 0x1e, 0x74, 0x0e, 0xff, 0x5e, 0x57, 0xef, 0xcc, 0xe8, 0x25, 0xb9, 0xf6, 0x59, 0x62, 0x20,
	0xb9, 0x8b, 0xa7, 0xc5, 0x6d, 0xaf, 0x0a, 0xee, 0x16, 0xf1, 0xfc, 0xd6, 0xf7, 0x16, 0x37, 0xfd,
	0xfb, 0xa7, 0xa0, 0xfd, 0x59, 0x1a, 0x48, 0x87, 0xad, 0x2b, 0xba, 0x94, 0x2f, 0x54, 0xc1, 0xc2,
	0x44, 0x07, 0xa0, 0x5c, 0x93, 0x20, 0xa3, 0xc5, 0x6b, 0xac, 0x9b, 0xe5, 0xd0, 0xc0, 0xb9, 0xff,
	0xf3, 0xea, 0x67, 0x95, 0xfd, 0xef, 0xe0, 0xe1, 0xed, 0x5f, 0xbd, 0x85, 0xf0, 0x78, 0x93, 0x50,
	0x6b, 0xa3, 0xf7, 0xeb, 0xdd, 0x60, 0x7e, 0xf1, 0x11, 0xa8, 0xe5, 0x09, 0x8b, 0xc1, 0x78, 0x32,
	0xb8, 0x70, 0xd6, 0xf3, 0xb4, 0x0e, 0x8a, 0x70, 0x74, 0xf4, 0x4a, 0x69, 0x76, 0xf5, 0xea, 0x8b,
	0x9f, 0x2a, 0xb0, 0xf7, 0x1e, 0x27, 0x3a, 0x80, 0xc7, 0xa7, 0x9d, 0x73, 0xcb, 0xb1, 0x2e, 0xac,
	0x91, 0xed, 0x74, 0xad, 0xd7, 0x9d, 0x8b, 0xc1, 0x18, 0x6f, 0x90, 0xed, 0xc3, 0xc3, 0xdb, 0x12,
	0xc6, 0x91, 0x5e, 0x41, 0x87, 0xf0, 0xe4, 0xb6, 0xd8, 0x79, 0xe7, 0x9b, 0x31, 0x1e, 0xd8, 0x6f,
	0xf5, 0x2a, 0x7a, 0x0c, 0x8f, 0x6e, 0x45, 0xf7, 0xfb, 0xfa, 0x56, 0xf7, 0xab, 0xef, 0xbf, 0xfc,
	0x1b, 0x3f, 0x8c, 0xa2, 0xab, 0x26, 0x11, 0x09, 0x5a, 0x24, 0x8e, 0x5b, 0xf2, 0x39, 0xff, 0x11,
	0x00, 0x00, 0xff, 0xff, 0x92, 0xa9, 0x33, 0x86, 0xd8, 0x0a, 0x00, 0x00,
}
