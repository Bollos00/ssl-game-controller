// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssl_gc_state.proto

package state

import (
	fmt "fmt"
	geom "github.com/RoboCup-SSL/ssl-game-controller/internal/app/geom"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Command_Type int32

const (
	Command_UNKNOWN        Command_Type = 0
	Command_HALT           Command_Type = 1
	Command_STOP           Command_Type = 2
	Command_NORMAL_START   Command_Type = 3
	Command_FORCE_START    Command_Type = 4
	Command_DIRECT         Command_Type = 5
	Command_INDIRECT       Command_Type = 6
	Command_KICKOFF        Command_Type = 7
	Command_PENALTY        Command_Type = 8
	Command_TIMEOUT        Command_Type = 9
	Command_BALL_PLACEMENT Command_Type = 10
)

var Command_Type_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "HALT",
	2:  "STOP",
	3:  "NORMAL_START",
	4:  "FORCE_START",
	5:  "DIRECT",
	6:  "INDIRECT",
	7:  "KICKOFF",
	8:  "PENALTY",
	9:  "TIMEOUT",
	10: "BALL_PLACEMENT",
}

var Command_Type_value = map[string]int32{
	"UNKNOWN":        0,
	"HALT":           1,
	"STOP":           2,
	"NORMAL_START":   3,
	"FORCE_START":    4,
	"DIRECT":         5,
	"INDIRECT":       6,
	"KICKOFF":        7,
	"PENALTY":        8,
	"TIMEOUT":        9,
	"BALL_PLACEMENT": 10,
}

func (x Command_Type) Enum() *Command_Type {
	p := new(Command_Type)
	*p = x
	return p
}

func (x Command_Type) String() string {
	return proto.EnumName(Command_Type_name, int32(x))
}

func (x *Command_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Command_Type_value, data, "Command_Type")
	if err != nil {
		return err
	}
	*x = Command_Type(value)
	return nil
}

func (Command_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d6a070b26c7dbbaf, []int{3, 0}
}

type GameState_Type int32

const (
	GameState_UNKNOWN        GameState_Type = 0
	GameState_HALT           GameState_Type = 1
	GameState_STOP           GameState_Type = 2
	GameState_RUNNING        GameState_Type = 3
	GameState_FREE_KICK      GameState_Type = 4
	GameState_KICKOFF        GameState_Type = 5
	GameState_PENALTY        GameState_Type = 6
	GameState_TIMEOUT        GameState_Type = 7
	GameState_BALL_PLACEMENT GameState_Type = 8
)

var GameState_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "HALT",
	2: "STOP",
	3: "RUNNING",
	4: "FREE_KICK",
	5: "KICKOFF",
	6: "PENALTY",
	7: "TIMEOUT",
	8: "BALL_PLACEMENT",
}

var GameState_Type_value = map[string]int32{
	"UNKNOWN":        0,
	"HALT":           1,
	"STOP":           2,
	"RUNNING":        3,
	"FREE_KICK":      4,
	"KICKOFF":        5,
	"PENALTY":        6,
	"TIMEOUT":        7,
	"BALL_PLACEMENT": 8,
}

func (x GameState_Type) Enum() *GameState_Type {
	p := new(GameState_Type)
	*p = x
	return p
}

func (x GameState_Type) String() string {
	return proto.EnumName(GameState_Type_name, int32(x))
}

func (x *GameState_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameState_Type_value, data, "GameState_Type")
	if err != nil {
		return err
	}
	*x = GameState_Type(value)
	return nil
}

func (GameState_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d6a070b26c7dbbaf, []int{4, 0}
}

type YellowCard struct {
	Id                   *uint32            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CausedByGameEvent    *GameEvent         `protobuf:"bytes,2,opt,name=caused_by_game_event,json=causedByGameEvent" json:"caused_by_game_event,omitempty"`
	TimeRemaining        *duration.Duration `protobuf:"bytes,3,opt,name=time_remaining,json=timeRemaining" json:"time_remaining,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *YellowCard) Reset()         { *m = YellowCard{} }
func (m *YellowCard) String() string { return proto.CompactTextString(m) }
func (*YellowCard) ProtoMessage()    {}
func (*YellowCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6a070b26c7dbbaf, []int{0}
}

func (m *YellowCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YellowCard.Unmarshal(m, b)
}
func (m *YellowCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YellowCard.Marshal(b, m, deterministic)
}
func (m *YellowCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YellowCard.Merge(m, src)
}
func (m *YellowCard) XXX_Size() int {
	return xxx_messageInfo_YellowCard.Size(m)
}
func (m *YellowCard) XXX_DiscardUnknown() {
	xxx_messageInfo_YellowCard.DiscardUnknown(m)
}

var xxx_messageInfo_YellowCard proto.InternalMessageInfo

func (m *YellowCard) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *YellowCard) GetCausedByGameEvent() *GameEvent {
	if m != nil {
		return m.CausedByGameEvent
	}
	return nil
}

func (m *YellowCard) GetTimeRemaining() *duration.Duration {
	if m != nil {
		return m.TimeRemaining
	}
	return nil
}

type RedCard struct {
	Id                   *uint32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CausedByGameEvent    *GameEvent `protobuf:"bytes,2,opt,name=caused_by_game_event,json=causedByGameEvent" json:"caused_by_game_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RedCard) Reset()         { *m = RedCard{} }
func (m *RedCard) String() string { return proto.CompactTextString(m) }
func (*RedCard) ProtoMessage()    {}
func (*RedCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6a070b26c7dbbaf, []int{1}
}

func (m *RedCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedCard.Unmarshal(m, b)
}
func (m *RedCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedCard.Marshal(b, m, deterministic)
}
func (m *RedCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedCard.Merge(m, src)
}
func (m *RedCard) XXX_Size() int {
	return xxx_messageInfo_RedCard.Size(m)
}
func (m *RedCard) XXX_DiscardUnknown() {
	xxx_messageInfo_RedCard.DiscardUnknown(m)
}

var xxx_messageInfo_RedCard proto.InternalMessageInfo

func (m *RedCard) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RedCard) GetCausedByGameEvent() *GameEvent {
	if m != nil {
		return m.CausedByGameEvent
	}
	return nil
}

type Foul struct {
	Id                   *uint32              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CausedByGameEvent    *GameEvent           `protobuf:"bytes,2,opt,name=caused_by_game_event,json=causedByGameEvent" json:"caused_by_game_event,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Foul) Reset()         { *m = Foul{} }
func (m *Foul) String() string { return proto.CompactTextString(m) }
func (*Foul) ProtoMessage()    {}
func (*Foul) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6a070b26c7dbbaf, []int{2}
}

func (m *Foul) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Foul.Unmarshal(m, b)
}
func (m *Foul) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Foul.Marshal(b, m, deterministic)
}
func (m *Foul) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Foul.Merge(m, src)
}
func (m *Foul) XXX_Size() int {
	return xxx_messageInfo_Foul.Size(m)
}
func (m *Foul) XXX_DiscardUnknown() {
	xxx_messageInfo_Foul.DiscardUnknown(m)
}

var xxx_messageInfo_Foul proto.InternalMessageInfo

func (m *Foul) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Foul) GetCausedByGameEvent() *GameEvent {
	if m != nil {
		return m.CausedByGameEvent
	}
	return nil
}

func (m *Foul) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type Command struct {
	Type                 *Command_Type `protobuf:"varint,1,req,name=type,enum=Command_Type" json:"type,omitempty"`
	ForTeam              *Team         `protobuf:"varint,2,opt,name=for_team,json=forTeam,enum=Team" json:"for_team,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6a070b26c7dbbaf, []int{3}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetType() Command_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Command_UNKNOWN
}

func (m *Command) GetForTeam() Team {
	if m != nil && m.ForTeam != nil {
		return *m.ForTeam
	}
	return Team_UNKNOWN
}

type GameState struct {
	Type                 *GameState_Type `protobuf:"varint,1,req,name=type,enum=GameState_Type" json:"type,omitempty"`
	ForTeam              *Team           `protobuf:"varint,2,opt,name=for_team,json=forTeam,enum=Team" json:"for_team,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GameState) Reset()         { *m = GameState{} }
func (m *GameState) String() string { return proto.CompactTextString(m) }
func (*GameState) ProtoMessage()    {}
func (*GameState) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6a070b26c7dbbaf, []int{4}
}

func (m *GameState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameState.Unmarshal(m, b)
}
func (m *GameState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameState.Marshal(b, m, deterministic)
}
func (m *GameState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameState.Merge(m, src)
}
func (m *GameState) XXX_Size() int {
	return xxx_messageInfo_GameState.Size(m)
}
func (m *GameState) XXX_DiscardUnknown() {
	xxx_messageInfo_GameState.DiscardUnknown(m)
}

var xxx_messageInfo_GameState proto.InternalMessageInfo

func (m *GameState) GetType() GameState_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return GameState_UNKNOWN
}

func (m *GameState) GetForTeam() Team {
	if m != nil && m.ForTeam != nil {
		return *m.ForTeam
	}
	return Team_UNKNOWN
}

type TeamInfo struct {
	Name                         *string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Goals                        *int32             `protobuf:"varint,2,opt,name=goals" json:"goals,omitempty"`
	Goalkeeper                   *int32             `protobuf:"varint,3,opt,name=goalkeeper" json:"goalkeeper,omitempty"`
	YellowCards                  []*YellowCard      `protobuf:"bytes,4,rep,name=yellow_cards,json=yellowCards" json:"yellow_cards,omitempty"`
	RedCards                     []*RedCard         `protobuf:"bytes,5,rep,name=red_cards,json=redCards" json:"red_cards,omitempty"`
	TimeoutsLeft                 *int32             `protobuf:"varint,6,opt,name=timeouts_left,json=timeoutsLeft" json:"timeouts_left,omitempty"`
	TimeoutTimeLeft              *duration.Duration `protobuf:"bytes,7,opt,name=timeout_time_left,json=timeoutTimeLeft" json:"timeout_time_left,omitempty"`
	OnPositiveHalf               *bool              `protobuf:"varint,8,opt,name=on_positive_half,json=onPositiveHalf" json:"on_positive_half,omitempty"`
	Fouls                        []*Foul            `protobuf:"bytes,9,rep,name=fouls" json:"fouls,omitempty"`
	BallPlacementFailures        *int32             `protobuf:"varint,10,opt,name=ball_placement_failures,json=ballPlacementFailures" json:"ball_placement_failures,omitempty"`
	BallPlacementFailuresReached *bool              `protobuf:"varint,11,opt,name=ball_placement_failures_reached,json=ballPlacementFailuresReached" json:"ball_placement_failures_reached,omitempty"`
	CanPlaceBall                 *bool              `protobuf:"varint,12,opt,name=can_place_ball,json=canPlaceBall" json:"can_place_ball,omitempty"`
	MaxAllowedBots               *int32             `protobuf:"varint,13,opt,name=max_allowed_bots,json=maxAllowedBots" json:"max_allowed_bots,omitempty"`
	BotSubstitutionIntent        *bool              `protobuf:"varint,14,opt,name=bot_substitution_intent,json=botSubstitutionIntent" json:"bot_substitution_intent,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}           `json:"-"`
	XXX_unrecognized             []byte             `json:"-"`
	XXX_sizecache                int32              `json:"-"`
}

func (m *TeamInfo) Reset()         { *m = TeamInfo{} }
func (m *TeamInfo) String() string { return proto.CompactTextString(m) }
func (*TeamInfo) ProtoMessage()    {}
func (*TeamInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6a070b26c7dbbaf, []int{5}
}

func (m *TeamInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamInfo.Unmarshal(m, b)
}
func (m *TeamInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamInfo.Marshal(b, m, deterministic)
}
func (m *TeamInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamInfo.Merge(m, src)
}
func (m *TeamInfo) XXX_Size() int {
	return xxx_messageInfo_TeamInfo.Size(m)
}
func (m *TeamInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeamInfo proto.InternalMessageInfo

func (m *TeamInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TeamInfo) GetGoals() int32 {
	if m != nil && m.Goals != nil {
		return *m.Goals
	}
	return 0
}

func (m *TeamInfo) GetGoalkeeper() int32 {
	if m != nil && m.Goalkeeper != nil {
		return *m.Goalkeeper
	}
	return 0
}

func (m *TeamInfo) GetYellowCards() []*YellowCard {
	if m != nil {
		return m.YellowCards
	}
	return nil
}

func (m *TeamInfo) GetRedCards() []*RedCard {
	if m != nil {
		return m.RedCards
	}
	return nil
}

func (m *TeamInfo) GetTimeoutsLeft() int32 {
	if m != nil && m.TimeoutsLeft != nil {
		return *m.TimeoutsLeft
	}
	return 0
}

func (m *TeamInfo) GetTimeoutTimeLeft() *duration.Duration {
	if m != nil {
		return m.TimeoutTimeLeft
	}
	return nil
}

func (m *TeamInfo) GetOnPositiveHalf() bool {
	if m != nil && m.OnPositiveHalf != nil {
		return *m.OnPositiveHalf
	}
	return false
}

func (m *TeamInfo) GetFouls() []*Foul {
	if m != nil {
		return m.Fouls
	}
	return nil
}

func (m *TeamInfo) GetBallPlacementFailures() int32 {
	if m != nil && m.BallPlacementFailures != nil {
		return *m.BallPlacementFailures
	}
	return 0
}

func (m *TeamInfo) GetBallPlacementFailuresReached() bool {
	if m != nil && m.BallPlacementFailuresReached != nil {
		return *m.BallPlacementFailuresReached
	}
	return false
}

func (m *TeamInfo) GetCanPlaceBall() bool {
	if m != nil && m.CanPlaceBall != nil {
		return *m.CanPlaceBall
	}
	return false
}

func (m *TeamInfo) GetMaxAllowedBots() int32 {
	if m != nil && m.MaxAllowedBots != nil {
		return *m.MaxAllowedBots
	}
	return 0
}

func (m *TeamInfo) GetBotSubstitutionIntent() bool {
	if m != nil && m.BotSubstitutionIntent != nil {
		return *m.BotSubstitutionIntent
	}
	return false
}

type State struct {
	Stage                      *Referee_Stage       `protobuf:"varint,1,opt,name=stage,enum=Referee_Stage" json:"stage,omitempty"`
	Command                    *Command             `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
	GameState                  *GameState           `protobuf:"bytes,19,opt,name=game_state,json=gameState" json:"game_state,omitempty"`
	StageTimeElapsed           *duration.Duration   `protobuf:"bytes,4,opt,name=stage_time_elapsed,json=stageTimeElapsed" json:"stage_time_elapsed,omitempty"`
	StageTimeLeft              *duration.Duration   `protobuf:"bytes,5,opt,name=stage_time_left,json=stageTimeLeft" json:"stage_time_left,omitempty"`
	MatchTimeStart             *timestamp.Timestamp `protobuf:"bytes,6,opt,name=match_time_start,json=matchTimeStart" json:"match_time_start,omitempty"`
	TeamState                  map[string]*TeamInfo `protobuf:"bytes,8,rep,name=team_state,json=teamState" json:"team_state,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PlacementPos               *geom.Vector2        `protobuf:"bytes,9,opt,name=placement_pos,json=placementPos" json:"placement_pos,omitempty"`
	NextCommand                *Command             `protobuf:"bytes,10,opt,name=next_command,json=nextCommand" json:"next_command,omitempty"`
	CurrentActionTimeRemaining *duration.Duration   `protobuf:"bytes,12,opt,name=current_action_time_remaining,json=currentActionTimeRemaining" json:"current_action_time_remaining,omitempty"`
	GameEvents                 []*GameEvent         `protobuf:"bytes,13,rep,name=game_events,json=gameEvents" json:"game_events,omitempty"`
	ProposedGameEvents         []*ProposedGameEvent `protobuf:"bytes,14,rep,name=proposed_game_events,json=proposedGameEvents" json:"proposed_game_events,omitempty"`
	Division                   *Division            `protobuf:"varint,15,opt,name=division,enum=Division" json:"division,omitempty"`
	AutoContinue               *bool                `protobuf:"varint,16,opt,name=auto_continue,json=autoContinue" json:"auto_continue,omitempty"`
	FirstKickoffTeam           *Team                `protobuf:"varint,17,opt,name=first_kickoff_team,json=firstKickoffTeam,enum=Team" json:"first_kickoff_team,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}             `json:"-"`
	XXX_unrecognized           []byte               `json:"-"`
	XXX_sizecache              int32                `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6a070b26c7dbbaf, []int{6}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetStage() Referee_Stage {
	if m != nil && m.Stage != nil {
		return *m.Stage
	}
	return Referee_NORMAL_FIRST_HALF_PRE
}

func (m *State) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *State) GetGameState() *GameState {
	if m != nil {
		return m.GameState
	}
	return nil
}

func (m *State) GetStageTimeElapsed() *duration.Duration {
	if m != nil {
		return m.StageTimeElapsed
	}
	return nil
}

func (m *State) GetStageTimeLeft() *duration.Duration {
	if m != nil {
		return m.StageTimeLeft
	}
	return nil
}

func (m *State) GetMatchTimeStart() *timestamp.Timestamp {
	if m != nil {
		return m.MatchTimeStart
	}
	return nil
}

func (m *State) GetTeamState() map[string]*TeamInfo {
	if m != nil {
		return m.TeamState
	}
	return nil
}

func (m *State) GetPlacementPos() *geom.Vector2 {
	if m != nil {
		return m.PlacementPos
	}
	return nil
}

func (m *State) GetNextCommand() *Command {
	if m != nil {
		return m.NextCommand
	}
	return nil
}

func (m *State) GetCurrentActionTimeRemaining() *duration.Duration {
	if m != nil {
		return m.CurrentActionTimeRemaining
	}
	return nil
}

func (m *State) GetGameEvents() []*GameEvent {
	if m != nil {
		return m.GameEvents
	}
	return nil
}

func (m *State) GetProposedGameEvents() []*ProposedGameEvent {
	if m != nil {
		return m.ProposedGameEvents
	}
	return nil
}

func (m *State) GetDivision() Division {
	if m != nil && m.Division != nil {
		return *m.Division
	}
	return Division_DIV_UNKNOWN
}

func (m *State) GetAutoContinue() bool {
	if m != nil && m.AutoContinue != nil {
		return *m.AutoContinue
	}
	return false
}

func (m *State) GetFirstKickoffTeam() Team {
	if m != nil && m.FirstKickoffTeam != nil {
		return *m.FirstKickoffTeam
	}
	return Team_UNKNOWN
}

func init() {
	proto.RegisterEnum("Command_Type", Command_Type_name, Command_Type_value)
	proto.RegisterEnum("GameState_Type", GameState_Type_name, GameState_Type_value)
	proto.RegisterType((*YellowCard)(nil), "YellowCard")
	proto.RegisterType((*RedCard)(nil), "RedCard")
	proto.RegisterType((*Foul)(nil), "Foul")
	proto.RegisterType((*Command)(nil), "Command")
	proto.RegisterType((*GameState)(nil), "GameState")
	proto.RegisterType((*TeamInfo)(nil), "TeamInfo")
	proto.RegisterType((*State)(nil), "State")
	proto.RegisterMapType((map[string]*TeamInfo)(nil), "State.TeamStateEntry")
}

func init() {
	proto.RegisterFile("ssl_gc_state.proto", fileDescriptor_d6a070b26c7dbbaf)
}

var fileDescriptor_d6a070b26c7dbbaf = []byte{
	// 1229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdf, 0x6e, 0xdb, 0x36,
	0x17, 0xff, 0x9c, 0xd8, 0xb1, 0x7c, 0xec, 0x28, 0x2a, 0xdb, 0xa0, 0xfa, 0xb2, 0xae, 0xcd, 0xdc,
	0x0e, 0xc8, 0x50, 0x44, 0x01, 0xb2, 0x61, 0x28, 0x36, 0x0c, 0x9b, 0xe3, 0x28, 0xa9, 0x11, 0xd7,
	0x31, 0x68, 0xb5, 0x43, 0x87, 0x01, 0x02, 0x2d, 0x53, 0x8e, 0x10, 0x49, 0x14, 0x44, 0x2a, 0xab,
	0x6f, 0xf6, 0x06, 0x7b, 0x82, 0x5d, 0xec, 0x9d, 0xf6, 0x0e, 0xbb, 0xdf, 0xfd, 0x6e, 0x06, 0x52,
	0x94, 0xe3, 0x66, 0xdd, 0xb2, 0x01, 0xbd, 0x3b, 0xfc, 0x9d, 0x3f, 0x3c, 0x87, 0xfc, 0x9d, 0x73,
	0x00, 0x71, 0x1e, 0xfb, 0xf3, 0xc0, 0xe7, 0x82, 0x08, 0xea, 0x64, 0x39, 0x13, 0x6c, 0xe7, 0xae,
	0xc6, 0x02, 0x96, 0x24, 0x2c, 0xd5, 0xe0, 0xb6, 0x06, 0xe7, 0x94, 0x25, 0x54, 0xe4, 0x0b, 0x0d,
	0xdf, 0xaf, 0x60, 0x92, 0x50, 0x9f, 0x5e, 0xd1, 0x54, 0x68, 0xc5, 0x03, 0xad, 0xc8, 0x69, 0x48,
	0x73, 0x4a, 0xfd, 0x84, 0x72, 0x4e, 0xe6, 0xd5, 0x15, 0x0f, 0xe7, 0x8c, 0xcd, 0x63, 0x7a, 0xa0,
	0x4e, 0xd3, 0x22, 0x3c, 0x98, 0x15, 0x39, 0x11, 0xd1, 0xf2, 0xb6, 0x47, 0x37, 0xf5, 0x22, 0x4a,
	0x28, 0x17, 0x24, 0xc9, 0x4a, 0x83, 0xee, 0xcf, 0x35, 0x80, 0xd7, 0x34, 0x8e, 0xd9, 0x0f, 0x7d,
	0x92, 0xcf, 0x90, 0x09, 0x6b, 0xd1, 0xcc, 0xae, 0xed, 0xd6, 0xf6, 0x36, 0xf1, 0x5a, 0x34, 0x43,
	0x5f, 0xc2, 0xbd, 0x80, 0x14, 0x9c, 0xce, 0xfc, 0xe9, 0x62, 0x25, 0x37, 0x7b, 0x6d, 0xb7, 0xb6,
	0xd7, 0x3e, 0x04, 0xe7, 0x94, 0x24, 0xd4, 0x95, 0x08, 0xbe, 0x53, 0xda, 0x1d, 0x2d, 0x96, 0x10,
	0xfa, 0x06, 0x4c, 0x79, 0x9d, 0x9f, 0xd3, 0x84, 0x44, 0x69, 0x94, 0xce, 0xed, 0x75, 0xe5, 0xf6,
	0x7f, 0xa7, 0xcc, 0xca, 0xa9, 0xb2, 0x72, 0x8e, 0x75, 0xd6, 0x78, 0x53, 0x3a, 0xe0, 0xca, 0xbe,
	0xfb, 0x0a, 0x9a, 0x98, 0xce, 0xde, 0x7b, 0x66, 0xdd, 0x9f, 0x6a, 0x50, 0x3f, 0x61, 0x45, 0xfc,
	0x7e, 0xeb, 0x7d, 0x06, 0xad, 0xe5, 0xf3, 0xea, 0x52, 0x77, 0xfe, 0x52, 0xaa, 0x57, 0x59, 0xe0,
	0x6b, 0xe3, 0xee, 0xef, 0x35, 0x68, 0xf6, 0x59, 0x92, 0x90, 0x74, 0x86, 0x3e, 0x82, 0xba, 0x58,
	0x64, 0xd4, 0xae, 0xed, 0xae, 0xed, 0x99, 0x87, 0x9b, 0x8e, 0xc6, 0x1d, 0x6f, 0x91, 0x51, 0xac,
	0x54, 0x68, 0x17, 0x8c, 0x90, 0xe5, 0xbe, 0xa0, 0x24, 0x51, 0x99, 0x99, 0x87, 0x0d, 0xc7, 0xa3,
	0x24, 0xc1, 0xcd, 0x90, 0xe5, 0x52, 0xe8, 0xfe, 0x52, 0x83, 0xba, 0x74, 0x40, 0x6d, 0x68, 0xbe,
	0x1c, 0x9d, 0x8d, 0xce, 0xbf, 0x1d, 0x59, 0xff, 0x43, 0x06, 0xd4, 0x9f, 0xf7, 0x86, 0x9e, 0x55,
	0x93, 0xd2, 0xc4, 0x3b, 0x1f, 0x5b, 0x6b, 0xc8, 0x82, 0xce, 0xe8, 0x1c, 0xbf, 0xe8, 0x0d, 0xfd,
	0x89, 0xd7, 0xc3, 0x9e, 0xb5, 0x8e, 0xb6, 0xa0, 0x7d, 0x72, 0x8e, 0xfb, 0xae, 0x06, 0xea, 0x08,
	0x60, 0xe3, 0x78, 0x80, 0xdd, 0xbe, 0x67, 0x35, 0x50, 0x07, 0x8c, 0xc1, 0x48, 0x9f, 0x36, 0x64,
	0xf4, 0xb3, 0x41, 0xff, 0xec, 0xfc, 0xe4, 0xc4, 0x6a, 0xca, 0xc3, 0xd8, 0x1d, 0xf5, 0x86, 0xde,
	0x6b, 0xcb, 0x90, 0x07, 0x6f, 0xf0, 0xc2, 0x3d, 0x7f, 0xe9, 0x59, 0x2d, 0x84, 0xc0, 0x3c, 0xea,
	0x0d, 0x87, 0xfe, 0x78, 0xd8, 0xeb, 0xbb, 0x2f, 0xdc, 0x91, 0x67, 0x41, 0xf7, 0xd7, 0x1a, 0xb4,
	0xe4, 0xd3, 0x4d, 0x64, 0xc3, 0xa0, 0xc7, 0x6f, 0x15, 0xbd, 0xe5, 0x2c, 0x35, 0xff, 0xad, 0xec,
	0x1f, 0xff, 0x6d, 0xd5, 0x6d, 0x68, 0xe2, 0x97, 0xa3, 0xd1, 0x60, 0x74, 0x6a, 0xad, 0xa3, 0x4d,
	0x68, 0x9d, 0x60, 0xd7, 0xf5, 0x65, 0x29, 0x56, 0x7d, 0xb5, 0xa8, 0xc6, 0x6a, 0x51, 0x1b, 0xab,
	0x45, 0x35, 0xdf, 0x51, 0x94, 0xd1, 0xfd, 0xad, 0x0e, 0x86, 0x4c, 0x64, 0x90, 0x86, 0x0c, 0x21,
	0xa8, 0xa7, 0x24, 0xa1, 0x8a, 0x5d, 0x2d, 0xac, 0x64, 0x74, 0x0f, 0x1a, 0x73, 0x46, 0x62, 0xae,
	0xf2, 0x6f, 0xe0, 0xf2, 0x80, 0x1e, 0x02, 0x48, 0xe1, 0x92, 0xd2, 0x8c, 0xe6, 0x8a, 0x39, 0x0d,
	0xbc, 0x82, 0x20, 0x07, 0x3a, 0x0b, 0xd5, 0xa3, 0x7e, 0x40, 0xf2, 0x19, 0xb7, 0xeb, 0xbb, 0xeb,
	0x7b, 0xed, 0xc3, 0xb6, 0x73, 0xdd, 0xb8, 0xb8, 0xbd, 0x58, 0xca, 0x1c, 0x7d, 0x0c, 0xad, 0x9c,
	0xce, 0xb4, 0x71, 0x43, 0x19, 0x1b, 0x8e, 0x6e, 0x24, 0x6c, 0xe4, 0xa5, 0xc0, 0xd1, 0x63, 0x50,
	0xed, 0xc6, 0x0a, 0xc1, 0xfd, 0x98, 0x86, 0xc2, 0xde, 0x50, 0x37, 0x77, 0x2a, 0x70, 0x48, 0x43,
	0x81, 0x5c, 0xb8, 0xa3, 0xcf, 0xbe, 0x6a, 0x66, 0x65, 0xd8, 0xbc, 0xad, 0x8f, 0xb7, 0xb4, 0x8f,
	0x64, 0xbb, 0x0a, 0xb3, 0x07, 0x16, 0x4b, 0xfd, 0x8c, 0xf1, 0x48, 0x44, 0x57, 0xd4, 0xbf, 0x20,
	0x71, 0x68, 0x1b, 0xbb, 0xb5, 0x3d, 0x03, 0x9b, 0x2c, 0x1d, 0x6b, 0xf8, 0x39, 0x89, 0x43, 0xf4,
	0x01, 0x34, 0x42, 0x56, 0xc4, 0xdc, 0x6e, 0xa9, 0xc4, 0x1b, 0x8e, 0x6c, 0x54, 0x5c, 0x62, 0xe8,
	0x73, 0xb8, 0x3f, 0x25, 0x71, 0xec, 0x67, 0x31, 0x09, 0x68, 0x42, 0x53, 0xe1, 0x87, 0x24, 0x8a,
	0x8b, 0x9c, 0x72, 0x1b, 0x54, 0xf2, 0xdb, 0x52, 0x3d, 0xae, 0xb4, 0x27, 0x5a, 0x89, 0x5c, 0x78,
	0xf4, 0x37, 0x7e, 0x7e, 0x4e, 0x49, 0x70, 0x41, 0x67, 0x76, 0x5b, 0x65, 0xf3, 0xe0, 0x9d, 0xfe,
	0xb8, 0xb4, 0x41, 0x4f, 0xc0, 0x0c, 0x48, 0x5a, 0x46, 0xf1, 0xa5, 0xa5, 0xdd, 0x51, 0x5e, 0x9d,
	0x80, 0xa4, 0xca, 0xe9, 0x88, 0xc4, 0xb1, 0xac, 0x35, 0x21, 0x6f, 0x7c, 0x22, 0x3f, 0x44, 0x4e,
	0x12, 0x26, 0xb8, 0xbd, 0xa9, 0xb2, 0x33, 0x13, 0xf2, 0xa6, 0x57, 0xc2, 0x47, 0x4c, 0x94, 0xe5,
	0x30, 0xe1, 0xf3, 0x62, 0xca, 0x45, 0x24, 0x0a, 0xf9, 0x74, 0x7e, 0x94, 0x0a, 0x39, 0x71, 0x4c,
	0x15, 0x78, 0x7b, 0xca, 0xc4, 0x64, 0x45, 0x3b, 0x50, 0xca, 0xee, 0x1f, 0x1b, 0xd0, 0x28, 0x1b,
	0xe7, 0x09, 0x34, 0xb8, 0x20, 0xf3, 0x92, 0x65, 0xe6, 0xa1, 0xe9, 0xe0, 0x72, 0x4f, 0x38, 0x13,
	0x89, 0xe2, 0x52, 0x89, 0xba, 0xd0, 0x0c, 0xca, 0x31, 0xa2, 0x27, 0x99, 0x51, 0x8d, 0x15, 0x5c,
	0x29, 0xd0, 0x27, 0x00, 0x6a, 0xe0, 0xa9, 0x0d, 0x66, 0xdf, 0x5d, 0x19, 0x78, 0xea, 0x26, 0xdc,
	0x9a, 0x2f, 0xbb, 0xf5, 0x14, 0x90, 0x8a, 0x5b, 0x32, 0x82, 0xc6, 0x24, 0xe3, 0x74, 0x66, 0xd7,
	0x6f, 0x23, 0x85, 0xa5, 0x9c, 0x24, 0x25, 0xdc, 0xd2, 0x05, 0xf5, 0x60, 0x6b, 0x25, 0x90, 0xa2,
	0x56, 0xe3, 0xd6, 0x15, 0xb1, 0x8c, 0xa2, 0x88, 0x75, 0x2c, 0x1f, 0x5b, 0x04, 0x17, 0x65, 0x08,
	0x2e, 0x48, 0x5e, 0xf2, 0xf8, 0x9f, 0x67, 0xaf, 0xa9, 0x7c, 0xe4, 0x79, 0x22, 0x3d, 0xd0, 0x67,
	0x00, 0x72, 0xac, 0xe8, 0xe2, 0x0d, 0xc5, 0xbc, 0x6d, 0x47, 0x4f, 0x20, 0x4a, 0x12, 0x25, 0xb9,
	0xa9, 0xc8, 0x17, 0xb8, 0x25, 0xaa, 0x33, 0xda, 0x87, 0xcd, 0x6b, 0x42, 0x65, 0x4c, 0x52, 0xb6,
	0x7c, 0xdc, 0x57, 0x34, 0x10, 0x2c, 0x3f, 0xc4, 0x9d, 0xa5, 0x7a, 0xcc, 0x38, 0x7a, 0x0a, 0x9d,
	0x94, 0xbe, 0x11, 0x7e, 0xf5, 0x15, 0x70, 0xe3, 0x2b, 0xda, 0x52, 0x5b, 0xad, 0x81, 0xef, 0xe1,
	0xc3, 0xa0, 0xc8, 0x73, 0x19, 0x99, 0x04, 0x8a, 0x18, 0x37, 0x76, 0x69, 0xe7, 0xb6, 0x87, 0xda,
	0xd1, 0xfe, 0x3d, 0xe5, 0xee, 0xad, 0x2e, 0x56, 0xf4, 0x14, 0xda, 0xd7, 0xdb, 0x4d, 0xb2, 0x73,
	0xfd, 0xc6, 0x7a, 0x53, 0x5c, 0x50, 0x22, 0x47, 0xc7, 0x70, 0x2f, 0xcb, 0x59, 0xc6, 0xe4, 0x5a,
	0x5c, 0xf5, 0x32, 0x95, 0x17, 0x72, 0xc6, 0x5a, 0x79, 0xed, 0x8d, 0xb2, 0x9b, 0x90, 0x1c, 0x4a,
	0xc6, 0x2c, 0xba, 0x8a, 0x78, 0xc4, 0x52, 0x7b, 0x4b, 0x91, 0xb5, 0xe5, 0x1c, 0x6b, 0x00, 0x2f,
	0x55, 0x72, 0x28, 0x91, 0x42, 0x30, 0x3f, 0x60, 0xa9, 0x88, 0xd2, 0x82, 0xda, 0x56, 0xd9, 0x61,
	0x12, 0xec, 0x6b, 0x0c, 0x7d, 0x0a, 0x28, 0x8c, 0x72, 0x2e, 0xfc, 0xcb, 0x28, 0xb8, 0x64, 0x61,
	0x58, 0xee, 0x84, 0x3b, 0xab, 0x3b, 0xc1, 0x52, 0x06, 0x67, 0xa5, 0x5e, 0x22, 0x3b, 0xa7, 0x60,
	0xbe, 0xfd, 0x95, 0xc8, 0x82, 0xf5, 0x4b, 0xba, 0xd0, 0x03, 0x5a, 0x8a, 0xe8, 0x11, 0x34, 0xae,
	0x48, 0x5c, 0x50, 0xdd, 0x26, 0x2d, 0xa7, 0x9a, 0xe6, 0xb8, 0xc4, 0xbf, 0x58, 0x7b, 0x56, 0x3b,
	0xfa, 0xfa, 0xbb, 0xaf, 0xe6, 0x91, 0xb8, 0x28, 0xa6, 0x4e, 0xc0, 0x92, 0x03, 0xcc, 0xa6, 0xac,
	0x5f, 0x64, 0xfb, 0x93, 0xc9, 0xf0, 0x80, 0xf3, 0x78, 0x5f, 0xbe, 0xd0, 0xbe, 0xcc, 0x3e, 0x67,
	0x71, 0x4c, 0xf3, 0x03, 0xd9, 0xcf, 0x79, 0x4a, 0xe2, 0x03, 0x92, 0x65, 0x07, 0x8a, 0x5f, 0x7f,
	0x06, 0x00, 0x00, 0xff, 0xff, 0x7c, 0xfe, 0x33, 0x8d, 0x2d, 0x0a, 0x00, 0x00,
}
